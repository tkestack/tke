---
kind: Service
apiVersion: v1
metadata:
  name: tke-monitor-api
  namespace: tke
  annotations:
    tke.prometheus.io/scrape: "true"
    prometheus.io/scheme: https
spec:
  selector:
    app: tke-monitor-api
  ports:
    - protocol: TCP
      port: 443
      targetPort: 9455
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: tke-monitor-api
  name: tke-monitor-api
  namespace: tke
spec:
  replicas: {{ .Replicas }}
  selector:
    matchLabels:
      app: tke-monitor-api
  template:
    metadata:
      labels:
        app: tke-monitor-api
    spec:
      containers:
        - name: tke-monitor-api
          image: {{ .Image }}
          args:
            - -C=/app/conf/tke-monitor-api.toml
{{- if .EnableAudit }}
            - --audit-policy-file=/app/conf/audit-policy.yaml
            - --audit-webhook-config-file=/app/conf/audit-api-client-config.yaml
{{- end }}
          volumeMounts:
            - name: certs-volume
              mountPath: /app/certs
            - name: tke-monitor-api-volume
              mountPath: /app/conf
          ports:
            - containerPort: 9455
          readinessProbe:
            httpGet:
              port: 9455
              path: /healthz/ping
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              port: 9455
              path: /healthz
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi
      volumes:
        - name: certs-volume
          configMap:
            name: certs
        - name: tke-monitor-api-volume
          configMap:
            name: tke-monitor-api
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: tke-monitor-api
  namespace: tke
data:
  tke-monitor-api.toml: |
    monitor_config = "/app/conf/tke-monitor-config.yaml"

    [secure_serving]
    tls_cert_file = "/app/certs/server.crt"
    tls_private_key_file = "/app/certs/server.key"

    [etcd]
    servers = [
      "https://etcd:2379"
    ]
    cafile = "/app/certs/etcd-ca.crt"
    certfile = "/app/certs/etcd.crt"
    keyfile = "/app/certs/etcd.key"

    [generic]
    external_hostname = "tke-monitor-api"
    external_port = 443

    [authentication]
    token_auth_file = "/app/certs/token.csv"
    client_ca_file = "/app/certs/ca.crt"

      [authentication.oidc]
{{- if .EnableAuth }}
      client_id = "default"
      issuer_url = "https://tke-auth-api/oidc"
      external_issuer_url = "https://tke-auth-api/oidc"
      ca_file = "/app/certs/ca.crt"
      username_prefix ="-"
      username_claim = "name"
      groups_claim = "groups"
      tenantid_claim = "federated_claims"
{{- else }}
      client_id = {{ .OIDCClientID }}
      issuer_url = {{ .OIDCIssuerURL }}
  {{- if .UseOIDCCA }}
      ca_file = "/app/certs/oidc-ca.crt"
  {{- end}}
{{- end }}

      [authentication.requestheader]
      client_ca_file = "/app/certs/front-proxy-ca.crt"
      username_headers = "X-Remote-User"
      group_headers = "X-Remote-Group"
      extra_headers_prefix = "X-Remote-Extra-"

    [authorization]
{{- if .EnableAuth }}
    mode = "Webhook"
    webhook_config_file = "/app/conf/tke-auth-webhook.yaml"
{{- end }}

    [client]

      [client.platform]
      api_server = "https://tke-platform-api"
      api_server_client_config = "/app/conf/tke-platform-config.yaml"

      [client.business]
      api_server = "https://tke-business-api"
      api_server_client_config = "/app/conf/tke-business-config.yaml"

  tke-auth-webhook.yaml: |
    apiVersion: v1
    kind: Config
    clusters:
      - name: tke
        cluster:
          certificate-authority: /app/certs/ca.crt
          server: https://tke-auth-api/auth/authz
    users:
      - name: admin-cert
        user:
          client-certificate: /app/certs/admin.crt
          client-key: /app/certs/admin.key
    current-context: tke
    contexts:
    - context:
        cluster: tke
        user: admin-cert
      name: tke

  tke-platform-config.yaml: |
    apiVersion: v1
    kind: Config
    clusters:
      - name: tke
        cluster:
          certificate-authority: /app/certs/ca.crt
          server: https://tke-platform-api
    users:
      - name: admin-cert
        user:
          client-certificate: /app/certs/admin.crt
          client-key: /app/certs/admin.key
    current-context: tke
    contexts:
      - context:
          cluster: tke
          user: admin-cert
        name: tke

  tke-business-config.yaml: |
    apiVersion: v1
    kind: Config
    clusters:
      - name: tke
        cluster:
          certificate-authority: /app/certs/ca.crt
          server: https://tke-business-api
    users:
      - name: admin-cert
        user:
          client-certificate: /app/certs/admin.crt
          client-key: /app/certs/admin.key
    current-context: tke
    contexts:
      - context:
          cluster: tke
          user: admin-cert
        name: tke

  tke-monitor-config.yaml: |
    apiVersion: monitor.config.tkestack.io/v1
    kind: MonitorConfiguration
    storage:
{{- if eq .StorageType "influxDB" }}
      influxDB:
        servers:
          - address: {{ .StorageAddress }}
            username: {{ .StorageUsername }}
            password: {{ .StoragePassword }}
            timeoutSeconds: 10
{{- end }}
{{- if eq .StorageType "es" }}
      elasticSearch:
        servers:
          - address: {{ .StorageAddress }}
            username: {{ .StorageUsername }}
            password: {{ .StoragePassword }}
{{- end }}

{{- if .EnableAudit }}
  audit-policy.yaml: |
    apiVersion: audit.k8s.io/v1
    kind: Policy
    omitStages:
    - "RequestReceived"
    - "ResponseStarted"
    rules:
    - level: None
      resources:
      - group: "monitor.tkestack.io"
        resources: ["configmaps", "*/status"]
    - level: RequestResponse
      verbs: ["create", "update", "patch", "delete", "deletecollection"]

  audit-api-client-config.yaml: |
    apiVersion: v1
    kind: Config
    clusters:
      - name: tke
        cluster:
          insecure-skip-tls-verify: true
          server: https://tke-audit-api/apis/audit.tkestack.io/v1/events/sink/control-plane
    current-context: tke
    contexts:
      - context:
          cluster: tke
        name: tke

  {{- end }}
