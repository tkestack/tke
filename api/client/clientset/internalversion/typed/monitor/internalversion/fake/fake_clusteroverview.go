/*
 * Tencent is pleased to support the open source community by making TKEStack
 * available.
 *
 * Copyright (C) 2012-2020 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 * https://opensource.org/licenses/Apache-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 */

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	"context"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	testing "k8s.io/client-go/testing"
	monitor "tkestack.io/tke/api/monitor"
)

// FakeClusterOverviews implements ClusterOverviewInterface
type FakeClusterOverviews struct {
	Fake *FakeMonitor
}

var clusteroverviewsResource = schema.GroupVersionResource{Group: "monitor.tkestack.io", Version: "", Resource: "clusteroverviews"}

var clusteroverviewsKind = schema.GroupVersionKind{Group: "monitor.tkestack.io", Version: "", Kind: "ClusterOverview"}

// Create takes the representation of a clusterOverview and creates it.  Returns the server's representation of the clusterOverview, and an error, if there is any.
func (c *FakeClusterOverviews) Create(ctx context.Context, clusterOverview *monitor.ClusterOverview, opts v1.CreateOptions) (result *monitor.ClusterOverview, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewRootCreateAction(clusteroverviewsResource, clusterOverview), &monitor.ClusterOverview{})
	if obj == nil {
		return nil, err
	}
	return obj.(*monitor.ClusterOverview), err
}
