/*
 * Tencent is pleased to support the open source community by making TKEStack
 * available.
 *
 * Copyright (C) 2012-2020 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 * https://opensource.org/licenses/Apache-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 */

// Code generated by client-gen. DO NOT EDIT.

package scheme

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	serializer "k8s.io/apimachinery/pkg/runtime/serializer"
	application "tkestack.io/tke/api/application/install"
	auth "tkestack.io/tke/api/auth/install"
	business "tkestack.io/tke/api/business/install"
	logagent "tkestack.io/tke/api/logagent/install"
	monitor "tkestack.io/tke/api/monitor/install"
	notify "tkestack.io/tke/api/notify/install"
	platform "tkestack.io/tke/api/platform/install"
	registry "tkestack.io/tke/api/registry/install"
)

var Scheme = runtime.NewScheme()
var Codecs = serializer.NewCodecFactory(Scheme)
var ParameterCodec = runtime.NewParameterCodec(Scheme)

func init() {
	v1.AddToGroupVersion(Scheme, schema.GroupVersion{Version: "v1"})
	Install(Scheme)
}

// Install registers the API group and adds types to a scheme
func Install(scheme *runtime.Scheme) {
	application.Install(scheme)
	auth.Install(scheme)
	business.Install(scheme)
	logagent.Install(scheme)
	monitor.Install(scheme)
	notify.Install(scheme)
	platform.Install(scheme)
	registry.Install(scheme)
}
