// +build !ignore_autogenerated

/*
 * Tencent is pleased to support the open source community by making TKEStack
 * available.
 *
 * Copyright (C) 2012-2020 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 * https://opensource.org/licenses/Apache-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 */

// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	monitor "tkestack.io/tke/api/monitor"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*ConfigMap)(nil), (*monitor.ConfigMap)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ConfigMap_To_monitor_ConfigMap(a.(*ConfigMap), b.(*monitor.ConfigMap), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.ConfigMap)(nil), (*ConfigMap)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_ConfigMap_To_v1_ConfigMap(a.(*monitor.ConfigMap), b.(*ConfigMap), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ConfigMapList)(nil), (*monitor.ConfigMapList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ConfigMapList_To_monitor_ConfigMapList(a.(*ConfigMapList), b.(*monitor.ConfigMapList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.ConfigMapList)(nil), (*ConfigMapList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_ConfigMapList_To_v1_ConfigMapList(a.(*monitor.ConfigMapList), b.(*ConfigMapList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Metric)(nil), (*monitor.Metric)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Metric_To_monitor_Metric(a.(*Metric), b.(*monitor.Metric), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.Metric)(nil), (*Metric)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_Metric_To_v1_Metric(a.(*monitor.Metric), b.(*Metric), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MetricList)(nil), (*monitor.MetricList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MetricList_To_monitor_MetricList(a.(*MetricList), b.(*monitor.MetricList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.MetricList)(nil), (*MetricList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_MetricList_To_v1_MetricList(a.(*monitor.MetricList), b.(*MetricList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MetricQuery)(nil), (*monitor.MetricQuery)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MetricQuery_To_monitor_MetricQuery(a.(*MetricQuery), b.(*monitor.MetricQuery), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.MetricQuery)(nil), (*MetricQuery)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_MetricQuery_To_v1_MetricQuery(a.(*monitor.MetricQuery), b.(*MetricQuery), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MetricQueryCondition)(nil), (*monitor.MetricQueryCondition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MetricQueryCondition_To_monitor_MetricQueryCondition(a.(*MetricQueryCondition), b.(*monitor.MetricQueryCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.MetricQueryCondition)(nil), (*MetricQueryCondition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_MetricQueryCondition_To_v1_MetricQueryCondition(a.(*monitor.MetricQueryCondition), b.(*MetricQueryCondition), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_ConfigMap_To_monitor_ConfigMap(in *ConfigMap, out *monitor.ConfigMap, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Data = *(*map[string]string)(unsafe.Pointer(&in.Data))
	out.BinaryData = *(*map[string][]byte)(unsafe.Pointer(&in.BinaryData))
	return nil
}

// Convert_v1_ConfigMap_To_monitor_ConfigMap is an autogenerated conversion function.
func Convert_v1_ConfigMap_To_monitor_ConfigMap(in *ConfigMap, out *monitor.ConfigMap, s conversion.Scope) error {
	return autoConvert_v1_ConfigMap_To_monitor_ConfigMap(in, out, s)
}

func autoConvert_monitor_ConfigMap_To_v1_ConfigMap(in *monitor.ConfigMap, out *ConfigMap, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Data = *(*map[string]string)(unsafe.Pointer(&in.Data))
	out.BinaryData = *(*map[string][]byte)(unsafe.Pointer(&in.BinaryData))
	return nil
}

// Convert_monitor_ConfigMap_To_v1_ConfigMap is an autogenerated conversion function.
func Convert_monitor_ConfigMap_To_v1_ConfigMap(in *monitor.ConfigMap, out *ConfigMap, s conversion.Scope) error {
	return autoConvert_monitor_ConfigMap_To_v1_ConfigMap(in, out, s)
}

func autoConvert_v1_ConfigMapList_To_monitor_ConfigMapList(in *ConfigMapList, out *monitor.ConfigMapList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]monitor.ConfigMap)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_ConfigMapList_To_monitor_ConfigMapList is an autogenerated conversion function.
func Convert_v1_ConfigMapList_To_monitor_ConfigMapList(in *ConfigMapList, out *monitor.ConfigMapList, s conversion.Scope) error {
	return autoConvert_v1_ConfigMapList_To_monitor_ConfigMapList(in, out, s)
}

func autoConvert_monitor_ConfigMapList_To_v1_ConfigMapList(in *monitor.ConfigMapList, out *ConfigMapList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]ConfigMap)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_monitor_ConfigMapList_To_v1_ConfigMapList is an autogenerated conversion function.
func Convert_monitor_ConfigMapList_To_v1_ConfigMapList(in *monitor.ConfigMapList, out *ConfigMapList, s conversion.Scope) error {
	return autoConvert_monitor_ConfigMapList_To_v1_ConfigMapList(in, out, s)
}

func autoConvert_v1_Metric_To_monitor_Metric(in *Metric, out *monitor.Metric, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_MetricQuery_To_monitor_MetricQuery(&in.Query, &out.Query, s); err != nil {
		return err
	}
	out.JSONResult = in.JSONResult
	return nil
}

// Convert_v1_Metric_To_monitor_Metric is an autogenerated conversion function.
func Convert_v1_Metric_To_monitor_Metric(in *Metric, out *monitor.Metric, s conversion.Scope) error {
	return autoConvert_v1_Metric_To_monitor_Metric(in, out, s)
}

func autoConvert_monitor_Metric_To_v1_Metric(in *monitor.Metric, out *Metric, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_monitor_MetricQuery_To_v1_MetricQuery(&in.Query, &out.Query, s); err != nil {
		return err
	}
	out.JSONResult = in.JSONResult
	return nil
}

// Convert_monitor_Metric_To_v1_Metric is an autogenerated conversion function.
func Convert_monitor_Metric_To_v1_Metric(in *monitor.Metric, out *Metric, s conversion.Scope) error {
	return autoConvert_monitor_Metric_To_v1_Metric(in, out, s)
}

func autoConvert_v1_MetricList_To_monitor_MetricList(in *MetricList, out *monitor.MetricList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]monitor.Metric)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_MetricList_To_monitor_MetricList is an autogenerated conversion function.
func Convert_v1_MetricList_To_monitor_MetricList(in *MetricList, out *monitor.MetricList, s conversion.Scope) error {
	return autoConvert_v1_MetricList_To_monitor_MetricList(in, out, s)
}

func autoConvert_monitor_MetricList_To_v1_MetricList(in *monitor.MetricList, out *MetricList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Metric)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_monitor_MetricList_To_v1_MetricList is an autogenerated conversion function.
func Convert_monitor_MetricList_To_v1_MetricList(in *monitor.MetricList, out *MetricList, s conversion.Scope) error {
	return autoConvert_monitor_MetricList_To_v1_MetricList(in, out, s)
}

func autoConvert_v1_MetricQuery_To_monitor_MetricQuery(in *MetricQuery, out *monitor.MetricQuery, s conversion.Scope) error {
	out.Table = in.Table
	out.StartTime = (*int64)(unsafe.Pointer(in.StartTime))
	out.EndTime = (*int64)(unsafe.Pointer(in.EndTime))
	out.Fields = *(*[]string)(unsafe.Pointer(&in.Fields))
	out.Conditions = *(*[]monitor.MetricQueryCondition)(unsafe.Pointer(&in.Conditions))
	out.OrderBy = in.OrderBy
	out.Order = in.Order
	out.GroupBy = *(*[]string)(unsafe.Pointer(&in.GroupBy))
	out.Limit = in.Limit
	out.Offset = in.Offset
	return nil
}

// Convert_v1_MetricQuery_To_monitor_MetricQuery is an autogenerated conversion function.
func Convert_v1_MetricQuery_To_monitor_MetricQuery(in *MetricQuery, out *monitor.MetricQuery, s conversion.Scope) error {
	return autoConvert_v1_MetricQuery_To_monitor_MetricQuery(in, out, s)
}

func autoConvert_monitor_MetricQuery_To_v1_MetricQuery(in *monitor.MetricQuery, out *MetricQuery, s conversion.Scope) error {
	out.Table = in.Table
	out.StartTime = (*int64)(unsafe.Pointer(in.StartTime))
	out.EndTime = (*int64)(unsafe.Pointer(in.EndTime))
	out.Fields = *(*[]string)(unsafe.Pointer(&in.Fields))
	out.Conditions = *(*[]MetricQueryCondition)(unsafe.Pointer(&in.Conditions))
	out.OrderBy = in.OrderBy
	out.Order = in.Order
	out.GroupBy = *(*[]string)(unsafe.Pointer(&in.GroupBy))
	out.Limit = in.Limit
	out.Offset = in.Offset
	return nil
}

// Convert_monitor_MetricQuery_To_v1_MetricQuery is an autogenerated conversion function.
func Convert_monitor_MetricQuery_To_v1_MetricQuery(in *monitor.MetricQuery, out *MetricQuery, s conversion.Scope) error {
	return autoConvert_monitor_MetricQuery_To_v1_MetricQuery(in, out, s)
}

func autoConvert_v1_MetricQueryCondition_To_monitor_MetricQueryCondition(in *MetricQueryCondition, out *monitor.MetricQueryCondition, s conversion.Scope) error {
	out.Key = in.Key
	out.Expr = in.Expr
	out.Value = in.Value
	return nil
}

// Convert_v1_MetricQueryCondition_To_monitor_MetricQueryCondition is an autogenerated conversion function.
func Convert_v1_MetricQueryCondition_To_monitor_MetricQueryCondition(in *MetricQueryCondition, out *monitor.MetricQueryCondition, s conversion.Scope) error {
	return autoConvert_v1_MetricQueryCondition_To_monitor_MetricQueryCondition(in, out, s)
}

func autoConvert_monitor_MetricQueryCondition_To_v1_MetricQueryCondition(in *monitor.MetricQueryCondition, out *MetricQueryCondition, s conversion.Scope) error {
	out.Key = in.Key
	out.Expr = in.Expr
	out.Value = in.Value
	return nil
}

// Convert_monitor_MetricQueryCondition_To_v1_MetricQueryCondition is an autogenerated conversion function.
func Convert_monitor_MetricQueryCondition_To_v1_MetricQueryCondition(in *monitor.MetricQueryCondition, out *MetricQueryCondition, s conversion.Scope) error {
	return autoConvert_monitor_MetricQueryCondition_To_v1_MetricQueryCondition(in, out, s)
}
