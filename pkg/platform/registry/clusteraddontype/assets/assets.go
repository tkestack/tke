package assets

import (
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"strconv"
	"strings"
	"time"
)

type staticFilesFile struct {
	data  string
	mime  string
	mtime time.Time
	// size is the size before compression. If 0, it means the data is uncompressed
	size int
	// hash is a sha256 hash of the file contents. Used for the Etag, and useful for caching
	hash string
}

var staticFiles = map[string]*staticFilesFile{
	"CSIOperator.md": {
		data:  "",
		hash:  "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
		mime:  "",
		mtime: time.Unix(1574851373, 0),
		size:  0,
	},
	"CronHPA.md": {
		data:  "",
		hash:  "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
		mime:  "",
		mtime: time.Unix(1574851373, 0),
		size:  0,
	},
	"GPUManager.md": {
		data:  "\x1f\x8b\b\x00\x00\x00\x00\x00\x02\xff\xbcV_S\x1aY\x16\u007f\xefOq\xb7|\x99\xa4\x00\x01\xff$\xf1-\xb3\x99\xa2\xb6R\xb3\xcb\u058c\xfb2\xb5U2͍CE\x1a\x87\x86l\xa5\xca\aT@\x10\x11fF\xa2\"QI\xfcCtlp\x8c\xd8t\v~\x98\xf4\xb9\xf7\xf2\xe4W\xd8\xea\xbeM\xab\x89\x0f\xbb/C\x95U\xed\xbd\xf7\x9c\xf3;\xbfs\xce\xefޡ!\x14\bN\xba\xbf\rI\xa1i\x1cg͏dcU\x10\x86\x86\x86\x10\xd5ӆ\xde6\xf4\x02Ջ\x82\x10\bN\"\xfb\x10)\x95\x8dޖ\xa1\xa6\f\xf5\xe8\xe9̌;\"\xb9\xff!aZM\a\x82\x93T\xa9\xd3r\x166\x1b.\x04;\x9a\xa1\xad>O\xfe\x88\xe3\x12N\xc8\xe8\x19~\x15\x11qp&9\x1d\x91H\xe9WCo\xd33\x9d\xea;\xa0l\xd3Ֆ\v\xb1\xe6\xbecm\x87в\x90\xcb\xf63E\xe8\xb4!sjhǁ\xe0\xa4\xcb\xc4KV\x96\xc8\xee\x12\xd9\xd9g\xcdw.\x04J\a6\x1b\xec\xaa\xcc\xea+\x90/\xdaH\xb6TȜ1\xa5\a{K\xb0\x94\x85\xbd%z\x92\x87\xe5\x1d\xb6\xd8u!\xb2\xd6$+\xf3t\xadAr\x17Pk\f@b\xb9\xbf\x95\xa5\xbd=C=1\xbaWt\xad\x11\bNr\x0f\x1eAp\xc0\xc1J\x06\xca\xc7p\xb0`\xa8\x05\xeepB\x10\xdc\xe8\xe1CR\xf8\x8d\xe4\u007f\xe1\x90\x1f>\xbc\xbe\xac\xf248\x11&\xea[\xfb\x03$\xd0\xfd͆a-\xb3v\x86]-\xf9\xe0r7\x10\x9c\x84b\x9dVӴ\x9a\x06m\x8d\xae\x99\x94\x96\x9a\x86\xbe\xdfO\xe5I\xe1\x03wƮ\xb6\xc9\xea>\xa9\xa5\xe0\xea\x98V\xd3\xe4M\a.Kܕ\x83\x9d\x833\xfdY\x1cZ\xc8 3\xcf\x14\x95G6Qj{\xd0*\x19ڪ\x19\x19\x8auv\x9e&Z\x99\a7t\x1d\x96\xeb.\x04\x9d6\xcf矱\uf32b\xb7\xac9\xcf\x1dspNQL\x14V]\xac8vn\x16n\xa6\\\xf5\xd7\x15C\xd5IM3]\x1f7\xa1\xf4\xfe\xab\xbe\xbe\xc1\x94=C\xd5\xc6\xc6\x1f=~@\xab\xe9\xe1(N\xc4#\xa2\xcc.\x9a\xd0K\xbb\xb8\xad\xa1j\xc1x,\x8a\x13?\xe1\xa4\xcca܉\xb8\xd6\xeeoe\a\x9c\x0e'\xe5\xd04\xe6\xf6\xdc\xdc.D\xa9ɚ:I\x1d\x9a\x94Z=C\x97ې=\xe7xy\xd7\xf7\x17\x1b\xb4\xfb\a\xd4\x1a\xbc\x13 \x9by\xe94\a4;\xec\xb4.\b\xb7w\xf9\xf9[#\x84\x9e\x86\xc3\ue604\\\bZ\xd9/OZ\xb9\x14\xbe\xf49\x87>_\x83r\x91\x1e\xb6\x90\xfd\x9bC\xf4T\x87\xed\x02\xbaY\x00]c\x8a\xd2\u007f\x97\xa6\x95M^04\x87H>\x05\xa7\xdb\u007f\x0fE\xb1<\x1b\x12\xb1\x8c\xe6\x849\xe4\xbe\xef\x87n\xaf;\xff\xa0\xbb\xa7-\xf3\xe9٤;ʳs\x87C8\x1a\x93d\x9c@s\xe8\x99\xf5\xfd\x1dN\x98hH\xb3Ė\x17\xe8B\xc7Gvտ\x9as\xea\vD \x9b\x81\x93\rēs˯\xe5\x04\x8e\"\xc7\xe7\xcf\xc9X\"\xe4\x0e\x85\xa3\x11Y\x8e\xc4$+\xa9gxv&\xf6:\x8a%3\xc0=\xae\xec\xdc?\xf3'ܕ1>\xbcP\xd3\xc8f\xd3*\xd7=\x03\xce\xe5\u009c\n\xab\u007f\xc9z{0_\xec\xf0=dϞ\xfe\x8d)'T_4U\xc3rd\xa8't\xed\x8c5/h\xe1wz\\\x80b\xbd\x9f\xda%\xb92\xa7\x9e\x9c\x1f\xb1\x8f\x1d\xb3\x15\x173\x90=\xbf\xbe\\a\xca\a\xa6ԩ\xb2\xce\x0f@o\x1dr-\xc8d \x97\x85\xdc\a\xba\xd6\xf8\x94Z\xf8\x1cx\u007f\xb3\f\xb96y[7\xf4\xb6 \xf8<\x96(Z:|WM\xf1]9\x1dH(\x94\x8e\xd8b\xd7\x16\xc2Z\x83\xab\xdc탴\x9a\xfe\xfe\xf97\xb4\x9a\xf6y|ޛ\x86\xa3\xf9\x1c\xa9\xfdnt\n\x86\xbal\xa1\xf2{\xccz:*d\xa8)Ȝ\x92Z\xde\xe7\xf5\x1a\xea\x11\x14+FהY\x9e\x99\v\x19z\x86\xc7\xf2\xba}\xe6l\xb5J\xa4҂b\xdde\xe8\xfbPZ\xb6\xd6RERi\x99\xfcT>\xf2M\xa6\xf4hW\xf1 \xb2у\x93\r\x9b\xc5\r\xb3\x00\xfe\xb1\xf1o#_\x1b\xaaf\xeaZ\xabdj\x90u\xd98q\xb9\xc0qC\v\xef\x88\a9\x82\xed\f\";\x98'\xa7\v\xce\xfcq\xd96U\xa3\xa6\xc1v\x817\xeb=5\xe0\x8eț\x0e9\xabpM\x00%\xcf\xdeg\xacz\xd0M\x1d\xba\x95\x1f\xb8z\x90Z\x11\x96\xebd\xf5\x10rm(\xb5\xfe\xfd\xd5O\x89Ĭ<1<,\xc6$96\x83=?\x8b3\xb1d\xd8#ƢÉ\x97\xd8\xff`\xc0-\xd4\x1apq`\xf4\x0e\xa1y\xc9rGd\xb7d\xa8'ח+P\xac\xc0\x92\xfe)U&\xf9\x0fpZ\xe1\x95\xff\x94\xfa\xc5즫-\xc8\xec\xdf^\xe7\xf7Q\xbf~\xde\u007f\xfbn@\x02\xbf\x1a\xfa\xb5\x14;\x98\xe7\xa8\xf9e\xe8\xf4\x97E\xc6\xf5\xe5\n]\xe8ؑ\u07b4@\xd7x\f8X\x80\xad\xde\xf5eU@\b\x99\u007f\u007f\xf9\xe1&\xa7h(\"\xd9\tE\xa2\xd3VN\xf1\xd0\u007f\x86\xf1\xe3q\xbf\xffɈ\x17\x8f\x8d>\t?\xc6\xe2\xe8\xd8#q\xcc\xe7\xf3\x8e\xfa\xfd~<\xe6\x1b\xf5\xccJ\xd3\x0fl\x1as[\xa0kT\xcf\xd2?~\x05\xed\x80#\x83\x8b}\xa3[c\x1fwX\xb7k\x1d\x1bB\xdf?\xff\xc6\xe1\x94\xdb\xfc\x99\xd4s\x8a8!w贐8zA\xabi\x87L\xbeu;\x93A=\xbe\xdc\xe1]\x1f\bN\xf2Q\xbfú0\xea\xf9_(\x17\xbd\xe3\x8f\x1f\xf9\xc3a\xd1\xfb\"\xf4\xe2\xc7\x17O\xfc#\xa3c\xa27\xfc\xe4\x85\u007f\x1c\x8fb1|C\xf9\x10z\x1d\x8a\xce\f8\xe4\xf7\xbc9\x82\xebmHm\xdai\xd5\x1a\xe6\x19C\xd5\xecW\xd4\x00\x9f}\xf9[\xc30\x98s\xb2\xab\xf2O\xc76\x8e\xe5X2.bC]\x86\xfa1d7\xa7\x12X\x12\xb1\x94\xb0о\x12\x93\xe1\x90[\x8c\xc5\xf1\x94\xebΜ\xff_\xf6Q\x1c\x8d\xc5_O\xb9\xcc\xe7\x06\xc7c\xbfRh5\x1d\x1c\x1d\xbcq\xa6\xa6\xa6\x04!4\x1b\xf9\x17\x8e\x9b\x97\xc9\x04z\xe5\x13\x84\x97\x11)<\x81\x82\xb1\xb0 x<\x1eA\x90g\xb18!\bbLJ\x84\"\x12\x8e\xcb\xd6\xcbM\nE\xf1\x84y#\t\xc2\x00\x8f\xb9q\u007f&\x13\xc8\xe7\xf5\xf2h\x038^\xcf\b\a\xe4Bc\x81\xc8\xd7<Q\xe7\xd9\xf6gB\x1b\xf1\u07b7\xc7\t\x9c@~\x8e\xfb\xbf\x01\x00\x00\xff\xff\x9fp\xa9\x90\xf3\v\x00\x00",
		hash:  "1f2c694cb54e80cc9d0bd63ff1f1362219c003f63db94cf2c73d6ba21274faf7",
		mime:  "",
		mtime: time.Unix(1574851373, 0),
		size:  3059,
	},
	"Helm.md": {
		data:  "\x1f\x8b\b\x00\x00\x00\x00\x00\x02\xff|SMO\x13Q\x14ݿ_q\x93n4\xa1\xd3\x0f$\x10w\x86\x90\x98\x10\x8d\v\\\x19\x17\xd8>\xa5\xb1_\xe9LcH\xba\x90\xd0)-m\xa5\xc4J\xcaL\x05\x8aTf\xa13 \b\xb4\xd3\xd6?3\xf7\xbd\xe9\xaa\u007f\xc1\xcc\f`\xa5Ʒ\xbc\xe7\xbes\xcf;\xe7]\x9f\x0f\x1e\xd3x\xc26\xceY\xe3\x03!>\x9f\x0f\xb8\x99\xb7\xcc\v\xcb,s\xb3J\x88\x83\x02k\x18\\o\xf1Z\x01\x16\xb3\xafh&I%*\x02v뼮q\xad\x8c\xdd-\xae\xe4Y\xe9#Vd\xbcl\xa3|9\x05L=\xc7#\xc56\xbe\xb2u\xd96.\xd9~\x9b7\xcb.\x17\xea\r\xde\xdff;\x1b\xac\xf5\x85\x10[\x1eغau\xb7Q\xef\xe0\xaeƚU\xdcl\x8dz\xc5%\x9a\x8cФ4>o!\xf9&\x96\xa4\xa3^eiqa\xd4+\r\xd5\x02+\xd6\\\xf5\xc0\xd5+\x94\xcfps\xdf^\xef\x8fz\x15\xb6U\xb3\x06\xaa\xd5-x\xe8\xfc\xcarF\x02lj\xac\xb2\x81\xba2T\v|p\x84\x05\x19\xd5\x01\xf6\x0f\xb1\xb2Õ<\x1e\xeea\xf1\x80\xd5;l\xbf\xed\xd90\\\xd7x\xff\a6\xb5\xdb\xfe\xb7\xb7Z\xd0\xe8ا-B\xc6Q\xaf\xdf\x1d\xf8(\x1a\xf5\xa7\x920\x05xR\x98l\xb1̶uU\x9e$\xcb\xc1\xdd\x1a֪\xfc\xf8\x04r\xc0OM\xdc+\xc3\xcd\xc9\xc1\xd0l\xd8\xfa\x11V\x0fx]\xb3\u007f\xe6Y\xb7\x060\x06\xb3\xd2{<\xdd{\xba\x9c\xa0bz9BEȑ\x1c\xf8\xff:0^\x80\xbb\xe8D\xc9e\x10\xdf\xc5^K\xe3s\xa24\x1dO\xad&\x9c\xa0r\x10\x14\x82\xd3\xec\xe0j\xfe\xd9\xf3)\b\a\x9f\xc4\x1c\x87\xbf7\xc0{\x96_\\\x15%\x9a\x00\x97G\x8a\xc5\xe34\xe3\xf7n\xff\x83'4s\xc33\xf7\x1f\x1e'&7\xe0\xe1n\r\x8b\x17\xecs\xcb2/\b\t\t`\x992\xab\x1b\xac\xb2\x16\x12\xe6x\xa9Ț\xdf\\\xcf7\xb9\x92\xffc\xb1\a\x90\xb0\xe0\xa6\xe4:\xe9\x05\x05A!<\a\x9e\x02\b9\n\x80+y\xcf\xe5ۙV\xff\x17\xafkl\xa7\xc3\xce>\x11r\xfdϏ\xd7^8\xd8\xf5b\xb8\v\xf3\xf2ފ$\xa5Ň\x81@$\x9e\xcaF\x05\xc9\xfb\xd7B$\x95\bDS\x91\xac\xf3\xe6@:\x93\x8af#R\xe0\xc1\xccl`:<;\x1d\xbcO~\a\x00\x00\xff\xffQ\u007fq\xaf\x98\x03\x00\x00",
		hash:  "fd1482cf5a9793289e8a5fc67c408ef9e13b87cff16f40a64dc49ca02de72cd6",
		mime:  "",
		mtime: time.Unix(1574851373, 0),
		size:  920,
	},
	"LogCollector.md": {
		data:  "\x1f\x8b\b\x00\x00\x00\x00\x00\x02\xff\xbc\x95KO\x1bW\x14\xc7\xf7\xf3)nŦ\x91\x82!v\x1c\x93\xeeR\xbaKZUJ\xbb\x8a\xba\x18\xc6\x03E`\x0fŎ\xaaJ^L\x8c\x9f`\xe3I\x04\xc6\xd8\x040\xc5\xe0\xa4bƔ\xc4\xd8\x1e?>\fs\uef73\xe2+T3w0c\x1e\x12\xabze\xdds\xefy\xfc\xce\xff\x9c\x19\x1bC\xaf\xa4\xb9iiqQ\x14\xa2\xd22վ\xe0\xd2:Ǎ\x8d\x8d!\xa2'\f\xbdi\xe8kD\xcfs\x1cު\xc1`\vo4\xcdJ\nV\xf7\xe8J\x0f\x974P۰]\xc7;yX\xad\x1a\xad\x0e٨\xe3\xcc9.(F\xbfB\xca\t\xb3\x92\"\xfdCH%Gޞ\xd7 y~\xd9\xcdAA3\xf4\x1a4R\xd7\xd7l?8Sd't5N\xe2m\x92m\x83Z\xa6\xe7\x1a\xf4\x13\xb8\x986\xf4&)'\x98C(\xbc7\xe5w4}\x86^\xf2\xb3\v<\xb2\f\xb94\xa8e\x14\x95\x96\xe6\x05\x843E*'\x91\x13\xddv\x8e\xa6_\xbd\xbe\xbe\xc7,FK7\x0fJ\x17r\xfc\xae\"\xcd\x1d\x99\x1e\xbd3Z\x1d\xac\x15\x8c\xd6g\x96\x19ή\xc1j\x1d\xba2(څ\x1c\xbf\xfd\x8a\x99@Y\xbf\xec\xe6\xdcV\xf4bN\fG\x91\xd1-\xc3N}X\xb7\xa1\xd7\xd0\x0f\xbc\x18\x92\xc2\x111je\a\xbd\x03\xe8\x16\xe8@\xa1\xd5܅\x1cgX\x19/S.\xd3A\xda\xed\x93\x1e' \xb3m&\U000e49f2s\v}:mVR\xb8\xa3\xc0\x87\x1cnf\xe8\x976\xf9G\xbb7\x19C_g1\x98\x17\xf7{:\xa8\xd0\xea\xc83\xabu\xed&4RN\x13RIK\x05W\xadp$`\xe3\xb58_Ŷ\xf12\x98\xf8\xac\x8e\x13\x05\xcbX\xb2R2z\x03\xeb\xd1=\xe4q\xbcN\xaa*U\x0f\xd1˷3\xe2rX\x8c\x8a\x114$\xc7$b\x01?ܣ\xea\xc0\xdcr\b\x8c\x86\xb5\xc4l\xae\xd4I\xef_7\xf5\x85\xa1?\xd0\xda\xf4\xb4\xcaqn+\xbb\xef\x1e\r\xf4\"\x18\x1c\x97\xc2\xe81\x82F\xea\xf6UC\xaf\x19\xad\xb5\xdbNc\xe8\xe6\x19(yr\xdc@1DNu\xd8]C1d\xea%\xaa\x1eB~\x9fl\xd4\xe9\xd7\x04\xee((\x86pV\x86\xd3ݟ\xf8\x90\x18Y\xe2\x051\x82b\\\f\x8d\xdf\xfc!\xfb\f\xb9-\xe8\xc65\xfb\xe1\xa247.\fK\x891\xb9\xbd\x16\xa3(\x86\xb5\x02\xc38\xe9\xf1\xe1\xfd\xd6\xf4Ͽ>F^\xff\xe4\x8f\xdf[\x9d=)Ŭ\xf4\xc7#\u007fE\xa2b(f\xb1\x1c\xd9\x17\xacy\xb0\xd3\xc1\xdbڝ\xe3c\xab\xd7謳n\x82־\xb3\x8f\xce\xe4\xdbϙ\xe2\xe0\xa4\x04\xf1:|\xc8A&\x85w\x15RN0e\xdd9\x0en\U0007b1c2\xb9\xba\xb1\x86,\xe1\xb1\f\x99\x8a\xd9\xffL\xe3\x01k嗫\xb5\xf2\xc0\x9dbi\xa2_a\xf9Zc\x9dl\x82\xba\x02{\x1dR\x95\xa9\xda\xc7Ş3]\xb6Z\x1d\xa9\x8e\xe05\xb7\x15\xc84\xf1Ǫ\xa17\xefa\x8f\x8bm|\xb6\xc9D\x0ej\x96\xfe\x9d\xe4\xb8'\x1eD\xb6u\xe8m\xbeq/h\xbc~\f\x99&\x14\x1a\xbf}\xfb{4\xba\x14\xf9nbB\x90\xc2\x11iQ\xf4\xfc!,Jo\x83\x1eA\nMD\x17D\xef#;\x17\xaf\a\xc1N\x1dΏ\x8c\xfe1h]\x9a\xf9\x8c\xf7\vF\xeb\xc4Z\x00\xf9MH\xeb\x17\xb2\x82\xb3\x9f\xe0t\x93}).\xe4\xf7\x97\xdd\x1c\x1dT Ys\x9f\x13\xb5J\x94\x94Y\xfdj~<\xb0\x1d\xfb<Ȕ\xb3x\xed\x93#\n;kRN\x8cTn7\xed\xb2\x9b#\xf1\xb6\x13\xaa\xd8\x00\xbdÂ\xc0Q\x1c*\xfd\xcbn\x99\xe3\xbeys]N\x88\x9f\x0f;\xb5̇\xe6\xecr\x96\xf9?'x1\xf8\x9c\xf7\x8b^\xff\xd3\xe7\xc1\xa9g~\xd1\x17\x98}&\x04\x02\xfc\xec\xac \xf0\xfe)\xafg)<\xf7\x88\x11\xa4j\u007f\xa8$\xb6\x03\x99\x92\xfeW\xa6\xae\xe8\xac\\F˽\x8a\x99u\xf8\x8d\xb5>B6\x9eۙ\xdba\x1f\x00i6\xf0\xe4)\xff\xc4?#N\xfa&\x03>!\x10\xf0\xf23~o0\x18\x9c\x9a\xf2\xfbff|\f\xd2\u007f\x01\x00\x00\xff\xff\t\x13eh/\b\x00\x00",
		hash:  "44aab25c24e40aa95ba19abe9cdfb21df8215049f123077a35e21f740ed91e37",
		mime:  "",
		mtime: time.Unix(1574851373, 0),
		size:  2095,
	},
	"PersistentEvent.md": {
		data:  "\x1f\x8b\b\x00\x00\x00\x00\x00\x02\xff\xd4VKs\x1aG\x17\xdd\xf3+\xfa+m>WY\b\x900\x90\x9d\xe3\xf2\xcaI\xcaUNV\xae,\x10\x8c\x1c\x97$P\fN\xcaU,\x86\x11\x83x\nH\xf4@\x80\x8c\xb0\x8d\x84\x1f0(\x960\xcc\xf0\xf81\xf4\xednV\xfa\v\xa9\x99F\x88 \xc5e/Ê\xea\xee{\xef\xb9\xe7\x9c\xdb=ss\xe8\xa1\xf0,\xf04\x10\x14|\xc1\xfb\xbf\t\xbe S\xceH~\xdbd\x9a\x9b\x9bCT\x8b`\xad\x85\xb5$\xd5\xd2&Ӄ\xe7\xcb\xc23\x9f\x10\x14\x02\xc88\x19@\x90\x92I\xf2\x03V\xa3\x88\xef\xe9[\xa3b\x94\xf6\xdf\xd0B\x84\r\xb2\xac\x92\x82?R\x90\x8d\xd0S\x8d\x9dG\x88\x9a\xd5כ\x9b\xa0\x1e\x93M\x19\xa2\xe7\x17\xdd\x14(\x1d\xaa\x9d\x91\xc4\x1b\xac\xaa\x90˓\xfd*\xb4\xdb\xecD\x02\xa5<\t\x81L\x9e\x14ϰV\x85L\x02\x1a\x05\xdcK\x8f\xf6\x1b\xa3Wy8\xdc\"\xa58\xb4\x1b\x90x;\x14\xa5\x1f\x1f\xdcGdG!\xa90n\xabD\xaa\xd1B\x84\xc4ER\x8asL#9M{\r\xac&\xb1\xd6\xd2\xcftdH\xedA\xa2\xcc6{:\x8e\xae\bY\x85\x94>\xf0\x15\xc8n_tS\xb8[\x80f\x94\xa7\xe2Ix84^\x92\xfd\x16(]\xd8R!\xd6\xe4\x99u\xa0\xf5<H5\xfa^\x19\xa3a\x83\xfc\x18Po@wjL\uecc6\x82\xd5\x1c\xc9dq\xbfH\v\x11\xf4\xf0\xee\xddG\x88\x94Ґ\xa8\x90\xd8\x1etE\xa2fYO\xd1k(\x9d1\xd6\xf30i\x9e\xb1A\x91UR\xe4\xb5H\xcf^\rE\x89\v4ڬ\xd1\xde_P\xaaqp\x10\x95W'\"\x81\xd2a\xa7\x15\x93iz\x97\x9f\x9fQ\x1c\xdd\xf5z\xe7\xfd>t\x1bA3z\xfd4֪\xb8\x9d\xbc\x9e7\x84f\xd7 \x9b\xa6'M\x14B\xf4T\x83\x97I\x14B#-\xcf\x1ao }\xa47o\xa8\x89B\x88\xc4E8}\xf9\x83{]\bl\xb8=B\x00\x85L!4?\xfbC\xc6\x1a\x9a\xdeA3\xc7\xf4\xc0\xe0\xaa0\xbf1\xe9g^\xd0\x1b\ny\x85\x8d5\xff\x8bu\xfd\xaf\xc5l#G\xed{\x0f\u007f\xbam\xb5X\xbe\xff\x16\xa22\xd4\xf3!\x1d\xf9|\xe0E (\xac\x87t&g\x87\x80\xcb\x05%\x95\x1c(\xd3\xc6\x1f\v\x92W\xa69\x1a\xdbt\xa7\f\xb9\x1e\xe4j\xa4T\x1e\x8aa\xbeȽ>\x14\xc3Е\xa0݆\\\x82Տi=\xceݏ\xd5\x13\xbaS\xd6G\xa2фޮn\u008c\x82\xb5\xeaH,\xb0\xc1ָ֧S\x90\xabX\x8d\xb2\x93\xd7\xd3E!\x93\xe3\xb1XM\x92MY\xf7j?\t\xc7\x12\xafHkIP3\x10.\xc0\x96\xaa\xdb2\xfa\x91\xd6\xf7Hl\x8f\x892)g\xb1Z\xdc\xf0{\xb1\xb6\xcd\x12\x12\x95:\xb8]g\xafޏ\xc4\xec\xf8\xf0v\x19\x8aG\x86Ů\x04\xe6BbM\xe6\xceŃC\xba{\x80\xdb\"n\xbf\x83f\x86\xec\xb7h!\xb2:C\xd3P\x94fyE\xe3p5\n\xcd\xe8\xd4}2;\x94|\x8c\n\x11\x88\xeb\x83u5\xa3r\x985\xdaD\xaaq\x86f\x93C3:\xa1h<\xa7\x97\x13J\xa4\x1a\xdbzGJ\xf1\x99!\xbdI\xfc\xd1A\x16b-rX\xc1Z\xcbd\xb2\x9a\x114\xe2\xec\xb5|C5nl^\xf3F\xa3\xe9\xda\x1aF0J\xd9\xcc\bk2\x94jV\xb3\x93\xc6c\xa4\xf4\xc1\x98\xad\xc4?\xb8\xe3\xd9\xf8\xad\xf1/\x00\xb9;\xc9^\x87|\xdc\xe5\xf7\x00G\b\x9d\x16k\xf4u\xc2.;4\xe0\xd3\x03\rz\xbb\x8f\xa1с\x83\xda\xf8\xaa\xd9>\x81X\v2͟\xff\xffK0\xb8\x11\xf8fa\xc1\xe3\xf7\x05\xfck\x82\xf9WϚ\xff\xb9\xd7\xec\xf1\xaf/\x04W\x05ۭK\xe4P\xaa\xc1\xa7c\xdc?\x01\xa5\xcbb\xef\xc8Q\x06\xb7\xeb\xba&\xe9]\xd8҆b\x96\xc4\xdf\xc2\xe9.\u007f2\x86b\ue89bb\x83\"\xc8\xd5\xe9uڨ\xd0ltT9\x1f\x1d\xf2KlьFb\x9c$ߎJ\";\x0e\xf3>h!2+\x89A\xcaE7E\xa5θ\xda^\x134\x95ׁc\t\x8a\xfd\x8bn\xc1d\xfa\xdf㫎\xd6\xddO}\xe3v\x9e\xae?1:z\xe6\xfe}\xc1\xe6\xb1z]\x8e\xa5e\xfb\xb2}i\xd1\xe1\xf6:m\x8b\xcb\xceE\xc1-\xd8\xef\xd8\x05\x8f\xcbn\xde\xf0=\xb9e2-\x99\xd1\xcd\x0fƌ{\xe6\x10)\x9e\xe9h\xfe\xab\x9cs\xf8\x9f\xe1\x9c\x1f\x9eٽ\x12\xc2\b\xe7T]\x93\xe3\xcbI\x84R\xed\xdew\x8f&\x1c\xf1w\x8eGM\x13\xaa\u007f\x1e\f\xf6\xaf\x13\xfa\x19F=k\x81\xaf \xd4ȯ\xb7n\xb0\xc6\x1b\xba\x91\x80ɛ?\t\xb9\xe8\xa6H\xfcO\xfd\t\xe7 \x8d\x16\xf8\xdde\xd4\xff\x02o\nv\xbb\xc5\xe5X\xb2\xaf\xac\xb8\xed6\xefʢ\xcb氹\x1d\x1e\x97\xc3\xear\xb8\x9d^\xe7؛\x13\x05\x99R\x9d.\xcfE\x99\xe6\xee\xeb\xa7\xc3aq\xacح.\x8f}\xe5\x8e\xd3v\xc7auY\\\x82e\xd1jw:\x9c\xcbv\xc7\xe5t\xfc\x1d\x00\x00\xff\xff\x18\n\x0e\xb18\n\x00\x00",
		hash:  "9e1b894cd8de723613d96dcf222679e753f3c27ce166b75f66e2ba7c1576b018",
		mime:  "",
		mtime: time.Unix(1574851373, 0),
		size:  2616,
	},
	"Prometheus.md": {
		data:  "\x1f\x8b\b\x00\x00\x00\x00\x00\x02\xff\xb4X]S\xdaX\x18\xbe\xe7Wdƙ\xbd\xaa\xb6\xb6\xb3\xbb\xbdmmgg\xa7ӭӏ\xd9k\x16O\xbb\xac\x928I\xd8\xd9\xcex\x11, (\bn\xfd\f\xf8A+B;5\xe8\xaa\x14\x12\xd0\x1f\xc3y\xcfI\xae\xfc\v;\xc9AH\xf1\x03Q\x9b\x8bNs\xf2\xe6<\xcf\xfb\x9e\xe7\r\xefc_\x1f7,\n\x01$\xff\x89\x82\x92Y\xda'˳\x1eO__\x1fG\x8d06\xcaؘ\xa1F\xd2\xe3\x81u\x1d\xeb\xb3\xedH\\џ\x04\xff@\"\x8fd$Y\x99(=\xdc$\xa94>\xcc\xd0\xcc\x1c\x99-\xc0ܴ\xb9\xbdE\xb2I\x98\xce5\x94I\xb2T\x84l\xd1ZI\xe2\xfa,\x94\xaa\xa0Ua\xa5\b\xd5=H\xed|\x13\xbfX%\xb9\x18Uà\xad\xd1\xd9\x1dK=\x04}븖\xc0\x15\x9d\xce\x17I\xec+\x83\x80\x9aB\xb5]H\xee\xd1\xf9\"U\xc3\xee\x1d\xccwu\x98\xce\x1c\xd7\x12\x90N\x90\xa5r\x93R\xe8\x80\xec\x1bT\r\x93\xf8'\xd8]`1\xd8\xc8\x13#g\x96\xf7\xd8ΐ-\xe2\xfa\x91\xbd\xa1\x9b\xcfR\x99\xaaa\\\xf9L\x94\x02$\x16\xad\xacBv'\x1b\xca$+\x90\xf5\xaeH\xeb\xff\xd9y9\xe9C42ڪ\b\x94\xaa\xe6n\xce\xe3q?e\xf1\xed\x12r\x0fFF\xfa\x05\x9e\xbb\xc5\xc1N\xf4t 6\xf2\xb82sz\xcb\t\xaes\r\xd2IZ\xd8\xe1λ&8\xbak\xc0\xda\f\xc7]\x10b\x19˦\xb6\t\xc9\r:_4\x0f\xc2DOs\x13\x1c\x89+\xb0\xbb\xf6\x9b7\x80\xa4q\xaf\x0fI܄g\x82\xeb\xbf\xf4\xd5-\x96s\ap\x1d\xd1\x0e\x96\x9di\xbf${e\xd4\x1f@\xb2\xe8\xf7I\xe7g\xf0\b\x8d\x8f\to\x03\x88\x97\xcf\t\xb830H6*Cïn\r\u07bd\xff\xf4!D#\xb0\xbd|\xf2\x90!\xbd\x95d\x14\xe0z\x86~\x81Ŀ\xfd>\xf4\xc0\xe7\x13\x82g\xc0Op\xb7o\x04fh,(\xc9H|.\x8c\xa1\xb3\x03nw\xfc\xa7y{u\x98\x87~~\xc4Ͽ\xf9.0͢\x9d\x1fp~\xd1\xc6[=\xd4/\x8c#\xd1+\v\xe2\x8d\xc8\xe2Ν\xae\xb2\xe8\x05\xfa\x1a\xb2\xe8\x05\xe6\x1a\xb2\xb8\"L\xaf\xb2\xb8BѮ\"\v\xef\x18\x12倗\xf7\xbeAb\u007f\xc0\xeb\xe7/\xf8\u07bd\xb0E\xfa:8&!\xf9<Y\xdck\xca\xe2\xe7\x1f\xbb\xaa\u008d\xcc]xݔ\xeeG\xefK]`.\x9f\xe0\xdd\xdet\xdf\x1d\xfaFt\xdf\x15\xe6ft\xdf\v\xcc\xd5u\xcfq\xdfQ\x16\xbc0\x82\xfa\xd1?\xe3\x82(w\x91\xdf\x04\xf7ȋ\x02\x02\u007f\x8e(z\xff\x95t\v_\x1a\b\b\xbc_\x16D?\xfff\xc0'\x88H\x90\x06|B\xa0]Ƞ$\v\x81\xe7H\x12\x82\xa2\x0f=B\xaf\xfd\xbc_\xf6\v\xfce\n)\x8c4\xf7\xbe\x18\xe4\xba0\xad\xf3B]pn\bF\f\x8e]\x88t-\x18\x89)\xea\x12\x85\xbb\x06\x8c3\t\xbbl\x813CCV'+%\x8f\xa7\xbdN\x96Km\xbb\xc0Fl{\xb2\xd6g@[#\x1bS0\x15ec\xbe\xdb\x19\xb0\xe1\x1d\xebQ\\Q\xc8\xc2>\xe4\x97:\x87\xfd\xc2G\x88\xee1\xd3\xd0P&!\xb3a\x1b\x85L\x05\"{v$\xf3/\xb5%\xd8T\x8fk\t+\x92\xa4u\x8dY\x01\xd8T!\xb5\xcc\x10\xb1\x1ee\xbe\x84Q\xb7\x96\x8a\xa4`\x1b\x88Ssz\x87\ta\xbc\xacy\x8dM\xeb\x1d\xd4\x18\xa9\xe3\x9a\xea\xf1\f\x0ep\xec\xce\xfa\x10\xa6u\r\xebQR>\xa0\x99\xc5\xe6w\xa5\xa1\x84Z\x03vC\t\xfd.\x88\xa3c\x82w\xa4\xa1\x84\x86\x05\xfb\xdf!\x81\x97\xbd~\x1e\x89\xd8\xc8Cj\xfa\xe5\x93\xc7v\xb9\xffB>\x99n\xc7aw\x92\xea\x85\x16\xb6\x95\xab\xda\xd6'\x11!3_\xb0\x1e\x1d\x1a~\xd5PB\xac\x83\x1bJ\xe8\xd7g\r%D\xebs\xd4Ȳ\xbd~\x19~E\xb7\xe3\xecU\x92\x98\"\x1bS\x8e\xb7\xb9;\xc0A\xec\x13\x9d/>\xb0\x9b\xfb)kn\xaa\x86[ފ\x1a\xef!\x1d{\xf9\xe4q\xd3^\xa9\xe1f\xd2\xc5\x1c\x8d\xc7\xe0\xdf\x04\xa9lX\xa1\xf7ǵD\x87\xffbat{\x91.\xe4qe\xb6y\xab\xe5h:\xea \xdf;)U\xa7\xdb\xe4\x9e5\xc7\x06f\f\xed$\x1d\x86\x10)\xb7Y1\x1f\x97*a#o\xad\xaeA\xa5B\x16\xab\xf8\xf0\xc8f~\x941s\t\xac'ȗ\x1c\xd4\x14H\xcd5M\x9cK\xb9\x9c\xb5\x92\x86X\x99\xac\xe6\xb0QvN\r\xb4\xb8\xf91⊰m\x9ac\x90\x98S;\xf9N\xfe\xd4\xfe\xf9\xb4\xb1\x1c\xf3d\xcb\xd1q\xa0\x96\x9a\xa2\xab\n{\xc1,\x84\xed\x121\x1f\xbaY\xf8Fd\xb8\xa6\xb2\xbdIf\x1f6U\xfbH\xf7\fj\xac\xb7\xb6s\xce\x05\x1b\x11\xc8\x16\a\a\xee\xd3x\x8cd\xbf8\x16q\x9a\xaa\xe1\xd1N+>_\"\x89\xd0\xe9$\x99\xc6\xed\x1a\xef-\xb0\xd6eI:\xf9\xd2\x15\x03\xea\v\xac\x03\x99s\xb7\xe5\x1c+Cj\xa7\xa5\x8bl\x11\xben\xe1\xc3\x02\x94jf\xec3\xd9H\xe1ʶ}\x1a\xc9\x05\x982\x1aJ\x9a9l\xd6z\re\uee160\x8f2\x10ɻ\xd7ف[\xb9\x03k\xf5\xc3ɱ[J\x9c\xcc|\xb2\xb2\x8a\xb9\x15b\x94\xa8\x1an\xf3fYه<Ym\x02-\ue0217\x949\x96\x06K\x8c\x1d[7\x8eL\xf0?0\xf5\xb9I\xba\x1b\xd8M\xd2~9Ub+쩕\xabBj\xdaRT\xba\x9eg\x1f\x1cS;\xa4u\xed\xd2ub\t\x9dH\xbfM\xc1\xbd\xee\x06'\xeby\x9a\x9di\xfe\x85 5\r_\xf3\xb8\x9e5\xf7\xd7\xcdz\xbd\xd5\xfdda\x87$\xb5\x93\x8av\xa7\x90\xabҌv\x06\x05\xd7\xfa\x19\x14\xd8\xd3Ә\xff\a\x00\x00\xff\xff\xa5\xe6\x95/H\x12\x00\x00",
		hash:  "1a9788f86cb5d97db0453672c027a7277d6a89297f3ca4c03bdc54a51030b563",
		mime:  "",
		mtime: time.Unix(1575515710, 0),
		size:  4680,
	},
	"TappController.md": {
		data:  "",
		hash:  "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
		mime:  "",
		mtime: time.Unix(1574851373, 0),
		size:  0,
	},
}

// NotFound is called when no asset is found.
// It defaults to http.NotFound but can be overwritten
var NotFound = http.NotFound

// ServeHTTP serves a request, attempting to reply with an embedded file.
func ServeHTTP(rw http.ResponseWriter, req *http.Request) {
	path := strings.TrimPrefix(req.URL.Path, "/")
	f, ok := staticFiles[path]
	if !ok {
		if path != "" && !strings.HasSuffix(path, "/") {
			NotFound(rw, req)
			return
		}
		f, ok = staticFiles[path+"index.html"]
		if !ok {
			NotFound(rw, req)
			return
		}
	}
	header := rw.Header()
	if f.hash != "" {
		if hash := req.Header.Get("If-None-Match"); hash == f.hash {
			rw.WriteHeader(http.StatusNotModified)
			return
		}
		header.Set("ETag", f.hash)
	}
	if !f.mtime.IsZero() {
		if t, err := time.Parse(http.TimeFormat, req.Header.Get("If-Modified-Since")); err == nil && f.mtime.Before(t.Add(1*time.Second)) {
			rw.WriteHeader(http.StatusNotModified)
			return
		}
		header.Set("Last-Modified", f.mtime.UTC().Format(http.TimeFormat))
	}
	header.Set("Content-Type", f.mime)

	// Check if the asset is compressed in the binary
	if f.size == 0 {
		header.Set("Content-Length", strconv.Itoa(len(f.data)))
		io.WriteString(rw, f.data)
	} else {
		if header.Get("Content-Encoding") == "" && strings.Contains(req.Header.Get("Accept-Encoding"), "gzip") {
			header.Set("Content-Encoding", "gzip")
			header.Set("Content-Length", strconv.Itoa(len(f.data)))
			io.WriteString(rw, f.data)
		} else {
			header.Set("Content-Length", strconv.Itoa(f.size))
			reader, _ := gzip.NewReader(strings.NewReader(f.data))
			io.Copy(rw, reader)
			reader.Close()
		}
	}
}

// Server is simply ServeHTTP but wrapped in http.HandlerFunc so it can be passed into net/http functions directly.
var Server http.Handler = http.HandlerFunc(ServeHTTP)

// Open allows you to read an embedded file directly. It will return a decompressing Reader if the file is embedded in compressed format.
// You should close the Reader after you're done with it.
func Open(name string) (io.ReadCloser, error) {
	f, ok := staticFiles[name]
	if !ok {
		return nil, fmt.Errorf("Asset %s not found", name)
	}

	if f.size == 0 {
		return ioutil.NopCloser(strings.NewReader(f.data)), nil
	}
	return gzip.NewReader(strings.NewReader(f.data))
}

// ModTime returns the modification time of the original file.
// Useful for caching purposes
// Returns zero time if the file is not in the bundle
func ModTime(file string) (t time.Time) {
	if f, ok := staticFiles[file]; ok {
		t = f.mtime
	}
	return
}

// Hash returns the hex-encoded SHA256 hash of the original file
// Used for the Etag, and useful for caching
// Returns an empty string if the file is not in the bundle
func Hash(file string) (s string) {
	if f, ok := staticFiles[file]; ok {
		s = f.hash
	}
	return
}
