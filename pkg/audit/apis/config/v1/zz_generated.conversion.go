// +build !ignore_autogenerated

/*
 * Tencent is pleased to support the open source community by making TKEStack
 * available.
 *
 * Copyright (C) 2012-2020 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 * https://opensource.org/licenses/Apache-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 */

// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	config "tkestack.io/tke/pkg/audit/apis/config"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*AuditConfiguration)(nil), (*config.AuditConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_AuditConfiguration_To_config_AuditConfiguration(a.(*AuditConfiguration), b.(*config.AuditConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.AuditConfiguration)(nil), (*AuditConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_AuditConfiguration_To_v1_AuditConfiguration(a.(*config.AuditConfiguration), b.(*AuditConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ElasticSearchStorage)(nil), (*config.ElasticSearchStorage)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ElasticSearchStorage_To_config_ElasticSearchStorage(a.(*ElasticSearchStorage), b.(*config.ElasticSearchStorage), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.ElasticSearchStorage)(nil), (*ElasticSearchStorage)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_ElasticSearchStorage_To_v1_ElasticSearchStorage(a.(*config.ElasticSearchStorage), b.(*ElasticSearchStorage), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Storage)(nil), (*config.Storage)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Storage_To_config_Storage(a.(*Storage), b.(*config.Storage), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.Storage)(nil), (*Storage)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_Storage_To_v1_Storage(a.(*config.Storage), b.(*Storage), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_AuditConfiguration_To_config_AuditConfiguration(in *AuditConfiguration, out *config.AuditConfiguration, s conversion.Scope) error {
	if err := Convert_v1_Storage_To_config_Storage(&in.Storage, &out.Storage, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_AuditConfiguration_To_config_AuditConfiguration is an autogenerated conversion function.
func Convert_v1_AuditConfiguration_To_config_AuditConfiguration(in *AuditConfiguration, out *config.AuditConfiguration, s conversion.Scope) error {
	return autoConvert_v1_AuditConfiguration_To_config_AuditConfiguration(in, out, s)
}

func autoConvert_config_AuditConfiguration_To_v1_AuditConfiguration(in *config.AuditConfiguration, out *AuditConfiguration, s conversion.Scope) error {
	if err := Convert_config_Storage_To_v1_Storage(&in.Storage, &out.Storage, s); err != nil {
		return err
	}
	return nil
}

// Convert_config_AuditConfiguration_To_v1_AuditConfiguration is an autogenerated conversion function.
func Convert_config_AuditConfiguration_To_v1_AuditConfiguration(in *config.AuditConfiguration, out *AuditConfiguration, s conversion.Scope) error {
	return autoConvert_config_AuditConfiguration_To_v1_AuditConfiguration(in, out, s)
}

func autoConvert_v1_ElasticSearchStorage_To_config_ElasticSearchStorage(in *ElasticSearchStorage, out *config.ElasticSearchStorage, s conversion.Scope) error {
	out.Address = in.Address
	out.Indices = in.Indices
	out.ReserveDays = in.ReserveDays
	out.Username = in.Username
	out.Password = in.Password
	return nil
}

// Convert_v1_ElasticSearchStorage_To_config_ElasticSearchStorage is an autogenerated conversion function.
func Convert_v1_ElasticSearchStorage_To_config_ElasticSearchStorage(in *ElasticSearchStorage, out *config.ElasticSearchStorage, s conversion.Scope) error {
	return autoConvert_v1_ElasticSearchStorage_To_config_ElasticSearchStorage(in, out, s)
}

func autoConvert_config_ElasticSearchStorage_To_v1_ElasticSearchStorage(in *config.ElasticSearchStorage, out *ElasticSearchStorage, s conversion.Scope) error {
	out.Address = in.Address
	out.Indices = in.Indices
	out.ReserveDays = in.ReserveDays
	out.Username = in.Username
	out.Password = in.Password
	return nil
}

// Convert_config_ElasticSearchStorage_To_v1_ElasticSearchStorage is an autogenerated conversion function.
func Convert_config_ElasticSearchStorage_To_v1_ElasticSearchStorage(in *config.ElasticSearchStorage, out *ElasticSearchStorage, s conversion.Scope) error {
	return autoConvert_config_ElasticSearchStorage_To_v1_ElasticSearchStorage(in, out, s)
}

func autoConvert_v1_Storage_To_config_Storage(in *Storage, out *config.Storage, s conversion.Scope) error {
	out.ElasticSearch = (*config.ElasticSearchStorage)(unsafe.Pointer(in.ElasticSearch))
	return nil
}

// Convert_v1_Storage_To_config_Storage is an autogenerated conversion function.
func Convert_v1_Storage_To_config_Storage(in *Storage, out *config.Storage, s conversion.Scope) error {
	return autoConvert_v1_Storage_To_config_Storage(in, out, s)
}

func autoConvert_config_Storage_To_v1_Storage(in *config.Storage, out *Storage, s conversion.Scope) error {
	out.ElasticSearch = (*ElasticSearchStorage)(unsafe.Pointer(in.ElasticSearch))
	return nil
}

// Convert_config_Storage_To_v1_Storage is an autogenerated conversion function.
func Convert_config_Storage_To_v1_Storage(in *config.Storage, out *Storage, s conversion.Scope) error {
	return autoConvert_config_Storage_To_v1_Storage(in, out, s)
}
