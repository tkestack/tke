// +build !ignore_autogenerated

/*
 * Tencent is pleased to support the open source community by making TKEStack
 * available.
 *
 * Copyright (C) 2012-2020 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 * https://opensource.org/licenses/Apache-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 */

// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	config "tkestack.io/tke/pkg/mesh/apis/config"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Components)(nil), (*config.Components)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Components_To_config_Components(a.(*Components), b.(*config.Components), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.Components)(nil), (*Components)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_Components_To_v1_Components(a.(*config.Components), b.(*Components), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Istio)(nil), (*config.Istio)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Istio_To_config_Istio(a.(*Istio), b.(*config.Istio), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.Istio)(nil), (*Istio)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_Istio_To_v1_Istio(a.(*config.Istio), b.(*Istio), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*IstioGateway)(nil), (*config.IstioGateway)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_IstioGateway_To_config_IstioGateway(a.(*IstioGateway), b.(*config.IstioGateway), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.IstioGateway)(nil), (*IstioGateway)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_IstioGateway_To_v1_IstioGateway(a.(*config.IstioGateway), b.(*IstioGateway), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*IstioLabelSelector)(nil), (*config.IstioLabelSelector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_IstioLabelSelector_To_config_IstioLabelSelector(a.(*IstioLabelSelector), b.(*config.IstioLabelSelector), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.IstioLabelSelector)(nil), (*IstioLabelSelector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_IstioLabelSelector_To_v1_IstioLabelSelector(a.(*config.IstioLabelSelector), b.(*IstioLabelSelector), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MeshConfiguration)(nil), (*config.MeshConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MeshConfiguration_To_config_MeshConfiguration(a.(*MeshConfiguration), b.(*config.MeshConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.MeshConfiguration)(nil), (*MeshConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_MeshConfiguration_To_v1_MeshConfiguration(a.(*config.MeshConfiguration), b.(*MeshConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MeshManagerConfig)(nil), (*config.MeshManagerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MeshManagerConfig_To_config_MeshManagerConfig(a.(*MeshManagerConfig), b.(*config.MeshManagerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.MeshManagerConfig)(nil), (*MeshManagerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_MeshManagerConfig_To_v1_MeshManagerConfig(a.(*config.MeshManagerConfig), b.(*MeshManagerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Region)(nil), (*config.Region)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Region_To_config_Region(a.(*Region), b.(*config.Region), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.Region)(nil), (*Region)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_Region_To_v1_Region(a.(*config.Region), b.(*Region), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_Components_To_config_Components(in *Components, out *config.Components, s conversion.Scope) error {
	out.MeshManager = (*config.MeshManagerConfig)(unsafe.Pointer(in.MeshManager))
	return nil
}

// Convert_v1_Components_To_config_Components is an autogenerated conversion function.
func Convert_v1_Components_To_config_Components(in *Components, out *config.Components, s conversion.Scope) error {
	return autoConvert_v1_Components_To_config_Components(in, out, s)
}

func autoConvert_config_Components_To_v1_Components(in *config.Components, out *Components, s conversion.Scope) error {
	out.MeshManager = (*MeshManagerConfig)(unsafe.Pointer(in.MeshManager))
	return nil
}

// Convert_config_Components_To_v1_Components is an autogenerated conversion function.
func Convert_config_Components_To_v1_Components(in *config.Components, out *Components, s conversion.Scope) error {
	return autoConvert_config_Components_To_v1_Components(in, out, s)
}

func autoConvert_v1_Istio_To_config_Istio(in *Istio, out *config.Istio, s conversion.Scope) error {
	out.SupportedVersion = *(*[]string)(unsafe.Pointer(&in.SupportedVersion))
	out.Gateway = (*config.IstioGateway)(unsafe.Pointer(in.Gateway))
	return nil
}

// Convert_v1_Istio_To_config_Istio is an autogenerated conversion function.
func Convert_v1_Istio_To_config_Istio(in *Istio, out *config.Istio, s conversion.Scope) error {
	return autoConvert_v1_Istio_To_config_Istio(in, out, s)
}

func autoConvert_config_Istio_To_v1_Istio(in *config.Istio, out *Istio, s conversion.Scope) error {
	out.SupportedVersion = *(*[]string)(unsafe.Pointer(&in.SupportedVersion))
	out.Gateway = (*IstioGateway)(unsafe.Pointer(in.Gateway))
	return nil
}

// Convert_config_Istio_To_v1_Istio is an autogenerated conversion function.
func Convert_config_Istio_To_v1_Istio(in *config.Istio, out *Istio, s conversion.Scope) error {
	return autoConvert_config_Istio_To_v1_Istio(in, out, s)
}

func autoConvert_v1_IstioGateway_To_config_IstioGateway(in *IstioGateway, out *config.IstioGateway, s conversion.Scope) error {
	out.DefaultHttpPort = in.DefaultHttpPort
	return nil
}

// Convert_v1_IstioGateway_To_config_IstioGateway is an autogenerated conversion function.
func Convert_v1_IstioGateway_To_config_IstioGateway(in *IstioGateway, out *config.IstioGateway, s conversion.Scope) error {
	return autoConvert_v1_IstioGateway_To_config_IstioGateway(in, out, s)
}

func autoConvert_config_IstioGateway_To_v1_IstioGateway(in *config.IstioGateway, out *IstioGateway, s conversion.Scope) error {
	out.DefaultHttpPort = in.DefaultHttpPort
	return nil
}

// Convert_config_IstioGateway_To_v1_IstioGateway is an autogenerated conversion function.
func Convert_config_IstioGateway_To_v1_IstioGateway(in *config.IstioGateway, out *IstioGateway, s conversion.Scope) error {
	return autoConvert_config_IstioGateway_To_v1_IstioGateway(in, out, s)
}

func autoConvert_v1_IstioLabelSelector_To_config_IstioLabelSelector(in *IstioLabelSelector, out *config.IstioLabelSelector, s conversion.Scope) error {
	out.AppRuntime = in.AppRuntime
	out.AppRelease = in.AppRelease
	return nil
}

// Convert_v1_IstioLabelSelector_To_config_IstioLabelSelector is an autogenerated conversion function.
func Convert_v1_IstioLabelSelector_To_config_IstioLabelSelector(in *IstioLabelSelector, out *config.IstioLabelSelector, s conversion.Scope) error {
	return autoConvert_v1_IstioLabelSelector_To_config_IstioLabelSelector(in, out, s)
}

func autoConvert_config_IstioLabelSelector_To_v1_IstioLabelSelector(in *config.IstioLabelSelector, out *IstioLabelSelector, s conversion.Scope) error {
	out.AppRuntime = in.AppRuntime
	out.AppRelease = in.AppRelease
	return nil
}

// Convert_config_IstioLabelSelector_To_v1_IstioLabelSelector is an autogenerated conversion function.
func Convert_config_IstioLabelSelector_To_v1_IstioLabelSelector(in *config.IstioLabelSelector, out *IstioLabelSelector, s conversion.Scope) error {
	return autoConvert_config_IstioLabelSelector_To_v1_IstioLabelSelector(in, out, s)
}

func autoConvert_v1_MeshConfiguration_To_config_MeshConfiguration(in *MeshConfiguration, out *config.MeshConfiguration, s conversion.Scope) error {
	if err := Convert_v1_Region_To_config_Region(&in.Region, &out.Region, s); err != nil {
		return err
	}
	if err := Convert_v1_Istio_To_config_Istio(&in.Istio, &out.Istio, s); err != nil {
		return err
	}
	if err := Convert_v1_Components_To_config_Components(&in.Components, &out.Components, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_MeshConfiguration_To_config_MeshConfiguration is an autogenerated conversion function.
func Convert_v1_MeshConfiguration_To_config_MeshConfiguration(in *MeshConfiguration, out *config.MeshConfiguration, s conversion.Scope) error {
	return autoConvert_v1_MeshConfiguration_To_config_MeshConfiguration(in, out, s)
}

func autoConvert_config_MeshConfiguration_To_v1_MeshConfiguration(in *config.MeshConfiguration, out *MeshConfiguration, s conversion.Scope) error {
	if err := Convert_config_Region_To_v1_Region(&in.Region, &out.Region, s); err != nil {
		return err
	}
	if err := Convert_config_Istio_To_v1_Istio(&in.Istio, &out.Istio, s); err != nil {
		return err
	}
	if err := Convert_config_Components_To_v1_Components(&in.Components, &out.Components, s); err != nil {
		return err
	}
	return nil
}

// Convert_config_MeshConfiguration_To_v1_MeshConfiguration is an autogenerated conversion function.
func Convert_config_MeshConfiguration_To_v1_MeshConfiguration(in *config.MeshConfiguration, out *MeshConfiguration, s conversion.Scope) error {
	return autoConvert_config_MeshConfiguration_To_v1_MeshConfiguration(in, out, s)
}

func autoConvert_v1_MeshManagerConfig_To_config_MeshManagerConfig(in *MeshManagerConfig, out *config.MeshManagerConfig, s conversion.Scope) error {
	out.Address = in.Address
	return nil
}

// Convert_v1_MeshManagerConfig_To_config_MeshManagerConfig is an autogenerated conversion function.
func Convert_v1_MeshManagerConfig_To_config_MeshManagerConfig(in *MeshManagerConfig, out *config.MeshManagerConfig, s conversion.Scope) error {
	return autoConvert_v1_MeshManagerConfig_To_config_MeshManagerConfig(in, out, s)
}

func autoConvert_config_MeshManagerConfig_To_v1_MeshManagerConfig(in *config.MeshManagerConfig, out *MeshManagerConfig, s conversion.Scope) error {
	out.Address = in.Address
	return nil
}

// Convert_config_MeshManagerConfig_To_v1_MeshManagerConfig is an autogenerated conversion function.
func Convert_config_MeshManagerConfig_To_v1_MeshManagerConfig(in *config.MeshManagerConfig, out *MeshManagerConfig, s conversion.Scope) error {
	return autoConvert_config_MeshManagerConfig_To_v1_MeshManagerConfig(in, out, s)
}

func autoConvert_v1_Region_To_config_Region(in *Region, out *config.Region, s conversion.Scope) error {
	out.Name = in.Name
	return nil
}

// Convert_v1_Region_To_config_Region is an autogenerated conversion function.
func Convert_v1_Region_To_config_Region(in *Region, out *config.Region, s conversion.Scope) error {
	return autoConvert_v1_Region_To_config_Region(in, out, s)
}

func autoConvert_config_Region_To_v1_Region(in *config.Region, out *Region, s conversion.Scope) error {
	out.Name = in.Name
	return nil
}

// Convert_config_Region_To_v1_Region is an autogenerated conversion function.
func Convert_config_Region_To_v1_Region(in *config.Region, out *Region, s conversion.Scope) error {
	return autoConvert_config_Region_To_v1_Region(in, out, s)
}
