openapi: 3.0.1
info:
  title: Harbor API
  description: These APIs provide services for manipulating Harbor project.
  version: "2.0"
servers:
- url: http://localhost/api/v2.0
- url: https://localhost/api/v2.0
security:
- basic: []
- {}
paths:
  /projects:
    get:
      tags:
      - project
      summary: List projects
      description: This endpoint returns projects created by Harbor.
      operationId: listProjects
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: page
        in: query
        description: The page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int64
          default: 10
      - name: name
        in: query
        description: The name of project.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: public
        in: query
        description: The project is public or private.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          format: int32
      - name: owner
        in: query
        description: The name of project owner.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Return all matched projects.
          headers:
            X-Total-Count:
              description: The total count of projects
              style: simple
              explode: false
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
                x-content-type: application/json
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    post:
      tags:
      - project
      summary: Create a new project.
      description: This endpoint is for user to create a new project.
      operationId: createProject
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      requestBody:
        description: New created project.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectReq'
        required: true
      responses:
        "201":
          description: Created
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
            Location:
              description: The location of the resource
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          description: Conflict
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: project
    head:
      tags:
      - project
      summary: Check if the project name user provided already exists.
      description: This endpoint is used to check if the project name provided already
        exist.
      operationId: headProject
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: query
        description: Project name for checking exists.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_id}:
    get:
      tags:
      - project
      summary: Return specific project detail information
      description: This endpoint returns specific project information by project ID.
      operationId: getProject
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_id
        in: path
        description: The ID of the project
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Return matched project information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    put:
      tags:
      - project
      summary: Update properties for a selected project.
      description: This endpoint is aimed to update the properties of a project.
      operationId: updateProject
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_id
        in: path
        description: The ID of the project
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Updates of project.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectReq'
        required: true
      responses:
        "200":
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: project
    delete:
      tags:
      - project
      summary: Delete project by projectID
      description: This endpoint is aimed to delete project by project ID.
      operationId: deleteProject
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_id
        in: path
        description: The ID of the project
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "412":
          description: Precondition failed
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_id}/_deletable:
    get:
      tags:
      - project
      summary: Get the deletable status of the project
      description: Get the deletable status of the project
      operationId: getProjectDeletable
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_id
        in: path
        description: The ID of the project
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Return deletable status of the project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeletable'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_id}/summary:
    get:
      tags:
      - project
      summary: Get summary of the project.
      description: Get summary of the project.
      operationId: getProjectSummary
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_id
        in: path
        description: The ID of the project
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Get summary of the project successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSummary'
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/repositories:
    get:
      tags:
      - repository
      summary: List repositories
      description: List repositories of the specified project
      operationId: listRepositories
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: q
        in: query
        description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: The page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int64
          default: 10
      responses:
        "200":
          description: Success
          headers:
            X-Total-Count:
              description: The total count of repositories
              style: simple
              explode: false
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Repository'
                x-content-type: application/json
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/repositories/{repository_name}:
    get:
      tags:
      - repository
      summary: Get repository
      description: Get the repository specified by name
      operationId: getRepository
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    put:
      tags:
      - repository
      summary: Update repository
      description: Update the repository specified by name
      operationId: updateRepository
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The JSON object of repository.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
        required: true
      responses:
        "200":
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: repository
    delete:
      tags:
      - repository
      summary: Delete repository
      description: Delete the repository specified by name
      operationId: deleteRepository
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/repositories/{repository_name}/artifacts:
    get:
      tags:
      - artifact
      summary: List artifacts
      description: List artifacts under the specific project and repository. Except
        the basic properties, the other supported queries in "q" includes "tags=*"
        to list only tagged artifacts, "tags=nil" to list only untagged artifacts,
        "tags=~v" to list artifacts whose tag fuzzy matches "v", "tags=v" to list
        artifact whose tag exactly matches "v", "labels=(id1, id2)" to list artifacts
        that both labels with id1 and id2 are added to
      operationId: listArtifacts
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: q
        in: query
        description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: The page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int64
          default: 10
      - name: with_tag
        in: query
        description: Specify whether the tags are included inside the returning artifacts
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: with_label
        in: query
        description: Specify whether the labels are included inside the returning
          artifacts
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: with_scan_overview
        in: query
        description: Specify whether the scan overview is included inside the returning
          artifacts
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: with_signature
        in: query
        description: Specify whether the signature is included inside the tags of
          the returning artifacts. Only works when setting "with_tag=true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: with_immutable_status
        in: query
        description: Specify whether the immutable status is included inside the tags
          of the returning artifacts. Only works when setting "with_tag=true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Success
          headers:
            X-Total-Count:
              description: The total count of artifacts
              style: simple
              explode: false
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artifact'
                x-content-type: application/json
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    post:
      tags:
      - artifact
      summary: Copy artifact
      description: Copy the artifact specified in the "from" parameter to the repository.
      operationId: CopyArtifact
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: from
        in: query
        description: The artifact from which the new artifact is copied from, the
          format should be "project/repository:tag" or "project/repository@digest".
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Created
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
            Location:
              description: The location of the resource
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "405":
          description: Method not allowed
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}:
    get:
      tags:
      - artifact
      summary: Get the specific artifact
      description: Get the artifact specified by the reference under the project and
        repository. The reference can be digest or tag.
      operationId: getArtifact
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reference
        in: path
        description: The reference of the artifact, can be digest or tag
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: The page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int64
          default: 10
      - name: with_tag
        in: query
        description: Specify whether the tags are inclued inside the returning artifacts
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: with_label
        in: query
        description: Specify whether the labels are inclued inside the returning artifacts
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: with_scan_overview
        in: query
        description: Specify whether the scan overview is inclued inside the returning
          artifacts
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: with_signature
        in: query
        description: Specify whether the signature is inclued inside the returning
          artifacts
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: with_immutable_status
        in: query
        description: Specify whether the immutable status is inclued inside the tags
          of the returning artifacts. Only works when setting "with_tag=true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    delete:
      tags:
      - artifact
      summary: Delete the specific artifact
      description: Delete the artifact specified by the reference under the project
        and repository. The reference can be digest or tag
      operationId: deleteArtifact
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reference
        in: path
        description: The reference of the artifact, can be digest or tag
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan:
    post:
      tags:
      - scan
      summary: Scan the artifact
      description: Scan the specified artifact
      operationId: scanArtifact
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reference
        in: path
        description: The reference of the artifact, can be digest or tag
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "202":
          description: Accepted
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan/{report_id}/log:
    get:
      tags:
      - scan
      summary: Get the log of the scan report
      description: Get the log of the scan report
      operationId: getReportLog
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reference
        in: path
        description: The reference of the artifact, can be digest or tag
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: report_id
        in: path
        description: The report id to get the log
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully get scan log file
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags:
    get:
      tags:
      - artifact
      summary: List tags
      description: List tags of the specific artifact
      operationId: listTags
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reference
        in: path
        description: The reference of the artifact, can be digest or tag
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: q
        in: query
        description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: The page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int64
          default: 10
      - name: with_signature
        in: query
        description: Specify whether the signature is included inside the returning
          tags
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: with_immutable_status
        in: query
        description: Specify whether the immutable status is included inside the returning
          tags
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Success
          headers:
            X-Total-Count:
              description: The total count of tags
              style: simple
              explode: false
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
                x-content-type: application/json
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    post:
      tags:
      - artifact
      summary: Create tag
      description: Create a tag for the specified artifact
      operationId: createTag
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reference
        in: path
        description: The reference of the artifact, can be digest or tag
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The JSON object of tag.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        "201":
          description: Created
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
            Location:
              description: The location of the resource
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "405":
          description: Method not allowed
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          description: Conflict
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: tag
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags/{tag_name}:
    delete:
      tags:
      - artifact
      summary: Delete tag
      description: Delete the tag of the specified artifact
      operationId: deleteTag
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reference
        in: path
        description: The reference of the artifact, can be digest or tag
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tag_name
        in: path
        description: The name of the tag
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/additions/{addition}:
    get:
      tags:
      - artifact
      summary: Get the addition of the specific artifact
      description: Get the addition of the artifact specified by the reference under
        the project and repository.
      operationId: getAddition
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reference
        in: path
        description: The reference of the artifact, can be digest or tag
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: addition
        in: path
        description: The type of addition.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - build_history
          - values.yaml
          - readme.md
          - dependencies
          - vulnerabilities
      responses:
        "200":
          description: Success
          headers:
            Content-Type:
              description: The content type of the addition
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels:
    post:
      tags:
      - artifact
      summary: Add label to artifact
      description: Add label to the specified artiact.
      operationId: addLabel
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reference
        in: path
        description: The reference of the artifact, can be digest or tag
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The label that added to the artifact. Only the ID property is
          needed.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      responses:
        "200":
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          description: Conflict
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: label
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels/{label_id}:
    delete:
      tags:
      - artifact
      summary: Remove label from artifact
      description: Remove the label from the specified artiact.
      operationId: removeLabel
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repository_name
        in: path
        description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reference
        in: path
        description: The reference of the artifact, can be digest or tag
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: label_id
        in: path
        description: The ID of the label that removed from the artifact.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          description: Conflict
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /audit-logs:
    get:
      tags:
      - auditlog
      summary: Get recent logs of the projects which the user is a member of
      description: |
        This endpoint let user see the recent operation logs of the projects which he is member of
      operationId: listAuditLogs
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: q
        in: query
        description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: The page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int64
          default: 10
      responses:
        "200":
          description: Success
          headers:
            X-Total-Count:
              description: The total count of auditlogs
              style: simple
              explode: false
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'
                x-content-type: application/json
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/logs:
    get:
      tags:
      - project
      summary: Get recent logs of the projects
      description: Get recent logs of the projects
      operationId: getLogs
      parameters:
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: q
        in: query
        description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: The page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int64
          default: 10
      responses:
        "200":
          description: Success
          headers:
            X-Total-Count:
              description: The total count of auditlogs
              style: simple
              explode: false
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'
                x-content-type: application/json
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /p2p/preheat/providers:
    get:
      tags:
      - preheat
      summary: List P2P providers
      description: List P2P providers
      operationId: ListProviders
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata'
                x-content-type: application/json
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /p2p/preheat/instances/ping:
    post:
      tags:
      - preheat
      summary: Ping status of a instance.
      description: |
        This endpoint checks status of a instance, the instance can be given by ID or Endpoint URL (together with credential)
      operationId: PingInstances
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      requestBody:
        description: The JSON object of instance.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
        required: true
      responses:
        "200":
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Instance not found (when instance is provided by ID).
          content: {}
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: instance
  /p2p/preheat/instances:
    get:
      tags:
      - preheat
      summary: List P2P provider instances
      description: List P2P provider instances
      operationId: ListInstances
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: page
        in: query
        description: The page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int64
          default: 10
      - name: q
        in: query
        description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          headers:
            X-Total-Count:
              description: The total count of preheating provider instances
              style: simple
              explode: false
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instance'
                x-content-type: application/json
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    post:
      tags:
      - preheat
      summary: Create p2p provider instances
      description: Create p2p provider instances
      operationId: CreateInstance
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      requestBody:
        description: The JSON object of instance.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
        required: true
      responses:
        "201":
          description: Response to insatnce created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceCreatedResp'
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          description: Conflict
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: instance
  /p2p/preheat/instances/{preheat_instance_name}:
    get:
      tags:
      - preheat
      summary: Get a P2P provider instance
      description: Get a P2P provider instance
      operationId: GetInstance
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: preheat_instance_name
        in: path
        description: Instance Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    put:
      tags:
      - preheat
      summary: Update the specified P2P provider instance
      description: Update the specified P2P provider instance
      operationId: UpdateInstance
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: preheat_instance_name
        in: path
        description: Instance Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The instance to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceUpdateResp'
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: instance
    delete:
      tags:
      - preheat
      summary: Delete the specified P2P provider instance
      description: Delete the specified P2P provider instance
      operationId: DeleteInstance
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: preheat_instance_name
        in: path
        description: Instance Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Instance ID deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceDeletedResp'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/preheat/policies:
    get:
      tags:
      - preheat
      summary: List preheat policies
      description: List preheat policies
      operationId: ListPolicies
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: The page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int64
          default: 10
      - name: q
        in: query
        description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List preheat policies success
          headers:
            X-Total-Count:
              description: The total count of policies
              style: simple
              explode: false
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreheatPolicy'
                x-content-type: application/json
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    post:
      tags:
      - preheat
      summary: Create a preheat policy under a project
      description: Create a preheat policy under a project
      operationId: CreatePolicy
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The policy schema info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreheatPolicy'
        required: true
      responses:
        "201":
          description: Created
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
            Location:
              description: The location of the resource
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          description: Conflict
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: policy
  /projects/{project_name}/preheat/policies/{preheat_policy_name}:
    get:
      tags:
      - preheat
      summary: Get a preheat policy
      description: Get a preheat policy
      operationId: GetPolicy
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: preheat_policy_name
        in: path
        description: Preheat Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Get a preheat policy success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreheatPolicy'
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    put:
      tags:
      - preheat
      summary: Update preheat policy
      description: Update preheat policy
      operationId: UpdatePolicy
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: preheat_policy_name
        in: path
        description: Preheat Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The policy schema info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreheatPolicy'
        required: true
      responses:
        "200":
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "409":
          description: Conflict
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: policy
    post:
      tags:
      - preheat
      summary: Manual preheat
      description: Manual preheat
      operationId: ManualPreheat
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: preheat_policy_name
        in: path
        description: Preheat Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The policy schema info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreheatPolicy'
        required: true
      responses:
        "201":
          description: Created
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
            Location:
              description: The location of the resource
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: policy
    delete:
      tags:
      - preheat
      summary: Delete a preheat policy
      description: Delete a preheat policy
      operationId: DeletePolicy
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: preheat_policy_name
        in: path
        description: Preheat Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions:
    get:
      tags:
      - preheat
      summary: List executions for the given policy
      description: List executions for the given policy
      operationId: ListExecutions
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: preheat_policy_name
        in: path
        description: Preheat Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: The page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int64
          default: 10
      - name: q
        in: query
        description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List executions success
          headers:
            X-Total-Count:
              description: The total count of executions
              style: simple
              explode: false
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Execution'
                x-content-type: application/json
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}:
    get:
      tags:
      - preheat
      summary: Get a execution detail by id
      description: Get a execution detail by id
      operationId: GetExecution
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: preheat_policy_name
        in: path
        description: Preheat Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: execution_id
        in: path
        description: Execution ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Get execution success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    patch:
      tags:
      - preheat
      summary: Stop a execution
      description: Stop a execution
      operationId: StopExecution
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: preheat_policy_name
        in: path
        description: Preheat Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: execution_id
        in: path
        description: Execution ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: The data of execution
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Execution'
        required: true
      responses:
        "200":
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: execution
  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}/tasks:
    get:
      tags:
      - preheat
      summary: List all the related tasks for the given execution
      description: List all the related tasks for the given execution
      operationId: ListTasks
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: preheat_policy_name
        in: path
        description: Preheat Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: execution_id
        in: path
        description: Execution ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: page
        in: query
        description: The page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int64
          default: 10
      - name: q
        in: query
        description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List tasks success
          headers:
            X-Total-Count:
              description: The total count of tasks
              style: simple
              explode: false
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
                x-content-type: application/json
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}/tasks/{task_id}/logs:
    get:
      tags:
      - preheat
      summary: Get the log text stream of the specified task for the given execution
      description: Get the log text stream of the specified task for the given execution
      operationId: GetPreheatLog
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: preheat_policy_name
        in: path
        description: Preheat Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: execution_id
        in: path
        description: Execution ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: task_id
        in: path
        description: Task ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Get log success
          headers:
            Content-Type:
              description: Content type of response
              style: simple
              explode: false
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Errors'
  /projects/{project_name}/preheat/providers:
    get:
      tags:
      - preheat
      summary: Get all providers at project level
      description: Get all providers at project level
      operationId: ListProvidersUnderProject
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: project_name
        in: path
        description: The name of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderUnderProject'
                x-content-type: application/json
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "403":
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /icons/{digest}:
    get:
      tags:
      - icon
      summary: Get artifact icon
      description: Get the artifact icon with the specified digest. As the original
        icon image is resized and encoded before returning, the parameter "digest"
        in the path doesn't match the hash of the returned content
      operationId: getIcon
      parameters:
      - name: X-Request-Id
        in: header
        description: An unique ID for the request
        required: false
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
      - name: digest
        in: path
        description: The digest of the resource
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Icon'
        "400":
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "404":
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "500":
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
components:
  schemas:
    Errors:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
      description: The error array that describe the errors got during the handling
        of request
    Error:
      type: object
      properties:
        code:
          type: string
          description: The error code
        message:
          type: string
          description: The error message
      description: a model for all the error response coming from harbor
    Repository:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the repository
          format: int64
        project_id:
          type: integer
          description: The ID of the project that the repository belongs to
          format: int64
        name:
          type: string
          description: The name of the repository
        description:
          type: string
          description: The description of the repository
        artifact_count:
          type: integer
          description: The count of the artifacts inside the repository
          format: int64
        pull_count:
          type: integer
          description: The count that the artifact inside the repository pulled
          format: int64
        creation_time:
          type: string
          description: The creation time of the repository
          format: date-time
        update_time:
          type: string
          description: The update time of the repository
          format: date-time
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        update_time: 2000-01-23T04:56:07.000+00:00
        project_id: 6
        name: name
        artifact_count: 1
        description: description
        id: 0
        pull_count: 5
    Artifact:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the artifact
          format: int64
        type:
          type: string
          description: The type of the artifact, e.g. image, chart, etc
        media_type:
          type: string
          description: The media type of the artifact
        manifest_media_type:
          type: string
          description: The manifest media type of the artifact
        project_id:
          type: integer
          description: The ID of the project that the artifact belongs to
          format: int64
        repository_id:
          type: integer
          description: The ID of the repository that the artifact belongs to
          format: int64
        digest:
          type: string
          description: The digest of the artifact
        size:
          type: integer
          description: The size of the artifact
          format: int64
        icon:
          type: string
          description: The digest of the icon
        push_time:
          type: string
          description: The push time of the artifact
          format: date-time
        pull_time:
          type: string
          description: The latest pull time of the artifact
          format: date-time
        extra_attrs:
          $ref: '#/components/schemas/ExtraAttrs'
        annotations:
          $ref: '#/components/schemas/Annotations'
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        addition_links:
          $ref: '#/components/schemas/AdditionLinks'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        scan_overview:
          $ref: '#/components/schemas/ScanOverview'
      example:
        references:
        - urls:
          - urls
          - urls
          child_id: 2
          parent_id: 5
          annotations: null
          child_digest: child_digest
          platform:
            '''os.version''': '''os.version'''
            os: os
            variant: variant
            '''os.features''':
            - '''os.features'''
            - '''os.features'''
            architecture: architecture
        - urls:
          - urls
          - urls
          child_id: 2
          parent_id: 5
          annotations: null
          child_digest: child_digest
          platform:
            '''os.version''': '''os.version'''
            os: os
            variant: variant
            '''os.features''':
            - '''os.features'''
            - '''os.features'''
            architecture: architecture
        addition_links:
          key:
            absolute: true
            href: href
        extra_attrs:
          key: {}
        icon: icon
        annotations:
          key: annotations
        type: type
        manifest_media_type: manifest_media_type
        tags:
        - pull_time: 2000-01-23T04:56:07.000+00:00
          immutable: true
          name: name
          signed: true
          repository_id: 9
          id: 7
          artifact_id: 3
          push_time: 2000-01-23T04:56:07.000+00:00
        - pull_time: 2000-01-23T04:56:07.000+00:00
          immutable: true
          name: name
          signed: true
          repository_id: 9
          id: 7
          artifact_id: 3
          push_time: 2000-01-23T04:56:07.000+00:00
        labels:
        - creation_time: 2000-01-23T04:56:07.000+00:00
          update_time: 2000-01-23T04:56:07.000+00:00
          color: color
          project_id: 4
          scope: scope
          name: name
          description: description
          id: 2
        - creation_time: 2000-01-23T04:56:07.000+00:00
          update_time: 2000-01-23T04:56:07.000+00:00
          color: color
          project_id: 4
          scope: scope
          name: name
          description: description
          id: 2
        pull_time: 2000-01-23T04:56:07.000+00:00
        size: 5
        media_type: media_type
        project_id: 6
        digest: digest
        scan_overview:
          key:
            severity: High
            duration: 300
            summary:
              summary:
                Critical: 5
                High: 5
              total: 500
              fixable: 100
            start_time: 2000-01-23T04:56:07.000+00:00
            scan_status: Success
            report_id: 5f62c830-f996-11e9-957f-0242c0a89008
            complete_percent: 100
            end_time: 2000-01-23T04:56:07.000+00:00
        repository_id: 1
        id: 0
        push_time: 2000-01-23T04:56:07.000+00:00
    Tag:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the tag
          format: int64
        repository_id:
          type: integer
          description: The ID of the repository that the tag belongs to
          format: int64
        artifact_id:
          type: integer
          description: The ID of the artifact that the tag attached to
          format: int64
        name:
          type: string
          description: The name of the tag
        push_time:
          type: string
          description: The push time of the tag
          format: date-time
        pull_time:
          type: string
          description: The latest pull time of the tag
          format: date-time
        immutable:
          type: boolean
          description: The immutable status of the tag
          x-omitempty: false
        signed:
          type: boolean
          description: The attribute indicates whether the tag is signed or not
          x-omitempty: false
      example:
        pull_time: 2000-01-23T04:56:07.000+00:00
        immutable: true
        name: name
        signed: true
        repository_id: 9
        id: 7
        artifact_id: 3
        push_time: 2000-01-23T04:56:07.000+00:00
    ExtraAttrs:
      type: object
      additionalProperties:
        type: object
        properties: {}
        example: {}
      x-schema-name: ExtraAttrs
    Annotations:
      type: object
      additionalProperties:
        type: string
      x-schema-name: Annotations
    AdditionLinks:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AdditionLink'
      x-schema-name: AdditionLinks
    AdditionLink:
      type: object
      properties:
        href:
          type: string
          description: The link of the addition
        absolute:
          type: boolean
          description: Determine whether the link is an absolute URL or not
          x-omitempty: false
      example:
        absolute: true
        href: href
    Reference:
      type: object
      properties:
        parent_id:
          type: integer
          description: The parent ID of the reference
          format: int64
        child_id:
          type: integer
          description: The child ID of the reference
          format: int64
        child_digest:
          type: string
          description: The digest of the child artifact
        platform:
          $ref: '#/components/schemas/Platform'
        annotations:
          $ref: '#/components/schemas/Annotations'
        urls:
          type: array
          description: The download URLs
          items:
            type: string
      example:
        urls:
        - urls
        - urls
        child_id: 2
        parent_id: 5
        annotations: null
        child_digest: child_digest
        platform:
          '''os.version''': '''os.version'''
          os: os
          variant: variant
          '''os.features''':
          - '''os.features'''
          - '''os.features'''
          architecture: architecture
    Platform:
      type: object
      properties:
        architecture:
          type: string
          description: The architecture that the artifact applys to
        os:
          type: string
          description: The OS that the artifact applys to
        '''os.version''':
          type: string
          description: The version of the OS that the artifact applys to
        '''os.features''':
          type: array
          description: The features of the OS that the artifact applys to
          items:
            type: string
        variant:
          type: string
          description: The variant of the CPU
      example:
        '''os.version''': '''os.version'''
        os: os
        variant: variant
        '''os.features''':
        - '''os.features'''
        - '''os.features'''
        architecture: architecture
    Label:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the label
          format: int64
        name:
          type: string
          description: The name the label
        description:
          type: string
          description: The description the label
        color:
          type: string
          description: The color the label
        scope:
          type: string
          description: The scope the label
        project_id:
          type: integer
          description: The ID of project that the label belongs to
          format: int64
        creation_time:
          type: string
          description: The creation time the label
          format: date-time
        update_time:
          type: string
          description: The update time of the label
          format: date-time
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        update_time: 2000-01-23T04:56:07.000+00:00
        color: color
        project_id: 4
        scope: scope
        name: name
        description: description
        id: 2
    ScanOverview:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/NativeReportSummary'
      description: The scan overview attached in the metadata of tag
      x-schema-name: ScanOverview
    NativeReportSummary:
      type: object
      properties:
        report_id:
          type: string
          description: id of the native scan report
          example: 5f62c830-f996-11e9-957f-0242c0a89008
        scan_status:
          type: string
          description: The status of the report generating process
          example: Success
        severity:
          type: string
          description: The overall severity
          example: High
        duration:
          type: integer
          description: The seconds spent for generating the report
          format: int64
          example: 300
        summary:
          $ref: '#/components/schemas/VulnerabilitySummary'
        start_time:
          type: string
          description: The start time of the scan process that generating report
          format: date-time
        end_time:
          type: string
          description: The end time of the scan process that generating report
          format: date-time
        complete_percent:
          type: integer
          description: The complete percent of the scanning which value is between
            0 and 100
          example: 100
      description: The summary for the native report
      example:
        severity: High
        duration: 300
        summary:
          summary:
            Critical: 5
            High: 5
          total: 500
          fixable: 100
        start_time: 2000-01-23T04:56:07.000+00:00
        scan_status: Success
        report_id: 5f62c830-f996-11e9-957f-0242c0a89008
        complete_percent: 100
        end_time: 2000-01-23T04:56:07.000+00:00
    VulnerabilitySummary:
      type: object
      properties:
        total:
          type: integer
          description: The total number of the found vulnerabilities
          format: int
          example: 500
        fixable:
          type: integer
          description: The number of the fixable vulnerabilities
          format: int
          example: 100
        summary:
          type: object
          additionalProperties:
            type: integer
            format: int
            example: 10
          description: Numbers of the vulnerabilities with different severity
          example:
            Critical: 5
            High: 5
      description: |
        VulnerabilitySummary contains the total number of the foun d vulnerabilities number and numbers of each severity level.
      example:
        summary:
          Critical: 5
          High: 5
        total: 500
        fixable: 100
    AuditLog:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the audit log entry.
        username:
          type: string
          description: Username of the user in this log entry.
        resource:
          type: string
          description: Name of the repository in this log entry.
        resource_type:
          type: string
          description: Tag of the repository in this log entry.
        operation:
          type: string
          description: The operation against the repository in this log entry.
        op_time:
          type: string
          description: The time when this operation is triggered.
          format: date-time
      example:
        resource: resource
        resource_type: resource_type
        op_time: 2000-01-23T04:56:07.000+00:00
        id: 0
        operation: operation
        username: username
    Metadata:
      type: object
      properties:
        id:
          type: string
          description: id
        name:
          type: string
          description: name
        icon:
          type: string
          description: icon
        maintainers:
          type: array
          description: maintainers
          items:
            type: string
        version:
          type: string
          description: version
        source:
          type: string
          description: source
      example:
        maintainers:
        - maintainers
        - maintainers
        name: name
        icon: icon
        id: id
        source: source
        version: version
    Instance:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID
        name:
          type: string
          description: Instance name
        description:
          type: string
          description: Description of instance
        vendor:
          type: string
          description: Based on which driver, identified by ID
        endpoint:
          type: string
          description: The service endpoint of this instance
        auth_mode:
          type: string
          description: The authentication way supported
        auth_info:
          type: object
          additionalProperties:
            type: string
          description: The auth credential data if exists
        status:
          type: string
          description: The health status
        enabled:
          type: boolean
          description: Whether the instance is activated or not
        default:
          type: boolean
          description: Whether the instance is default or not
        insecure:
          type: boolean
          description: Whether the instance endpoint is insecure or not
        setup_timestamp:
          type: integer
          description: The timestamp of instance setting up
          format: int64
      example:
        endpoint: endpoint
        default: true
        vendor: vendor
        name: name
        insecure: true
        description: description
        auth_mode: auth_mode
        id: 0
        auth_info:
          key: auth_info
        setup_timestamp: 6
        enabled: true
        status: status
    InstanceUpdateResp:
      type: object
      properties:
        updated:
          type: integer
          description: ID of instance updated
      example:
        updated: 0
    InstanceDeletedResp:
      type: object
      properties:
        removed:
          type: integer
          description: ID of instance removed
      example:
        removed: 0
    InstanceCreatedResp:
      type: object
      properties:
        id:
          type: integer
          description: ID of instance created
      example:
        id: 0
    PreheatPolicy:
      type: object
      properties:
        id:
          type: integer
          description: The ID of preheat policy
        name:
          type: string
          description: The Name of preheat policy
        description:
          type: string
          description: The Description of preheat policy
        project_id:
          type: integer
          description: The ID of preheat policy project
        provider_id:
          type: integer
          description: The ID of preheat policy provider
        provider_name:
          type: string
          description: The Name of preheat policy provider
        filters:
          type: string
          description: The Filters of preheat policy
        trigger:
          type: string
          description: The Trigger of preheat policy
        enabled:
          type: boolean
          description: Whether the preheat policy enabled
        creation_time:
          type: string
          description: The Create Time of preheat policy
          format: date-time
        update_time:
          type: string
          description: The Update Time of preheat policy
          format: date-time
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        update_time: 2000-01-23T04:56:07.000+00:00
        project_id: 6
        name: name
        description: description
        provider_id: 1
        id: 0
        filters: filters
        trigger: trigger
        provider_name: provider_name
        enabled: true
    Metrics:
      type: object
      properties:
        task_count:
          type: integer
          description: The count of task
        success_task_count:
          type: integer
          description: The count of success task
        error_task_count:
          type: integer
          description: The count of error task
        pending_task_count:
          type: integer
          description: The count of pending task
        running_task_count:
          type: integer
          description: The count of running task
        scheduled_task_count:
          type: integer
          description: The count of scheduled task
        stopped_task_count:
          type: integer
          description: The count of stopped task
      example:
        running_task_count: 7
        success_task_count: 5
        stopped_task_count: 3
        scheduled_task_count: 9
        error_task_count: 5
        pending_task_count: 2
        task_count: 1
    Execution:
      type: object
      properties:
        id:
          type: integer
          description: The ID of execution
        vendor_type:
          type: string
          description: The vendor type of execution
        vendor_id:
          type: integer
          description: The vendor id of execution
        status:
          type: string
          description: The status of execution
        status_message:
          type: string
          description: The status message of execution
        metrics:
          $ref: '#/components/schemas/Metrics'
        trigger:
          type: string
          description: The trigger of execution
        extra_attrs:
          $ref: '#/components/schemas/ExtraAttrs'
        start_time:
          type: string
          description: The start time of execution
        end_time:
          type: string
          description: The end time of execution
      example:
        status_message: status_message
        start_time: start_time
        extra_attrs:
          key: {}
        vendor_id: 6
        end_time: end_time
        id: 0
        metrics:
          running_task_count: 7
          success_task_count: 5
          stopped_task_count: 3
          scheduled_task_count: 9
          error_task_count: 5
          pending_task_count: 2
          task_count: 1
        trigger: trigger
        vendor_type: vendor_type
        status: status
    Task:
      type: object
      properties:
        id:
          type: integer
          description: The ID of task
        execution_id:
          type: integer
          description: The ID of task execution
        status:
          type: string
          description: The status of task
        status_message:
          type: string
          description: The status message of task
        run_count:
          type: integer
          description: The count of task run
        extra_attrs:
          $ref: '#/components/schemas/ExtraAttrs'
        creation_time:
          type: string
          description: The creation time of task
        update_time:
          type: string
          description: The update time of task
        start_time:
          type: string
          description: The start time of task
        end_time:
          type: string
          description: The end time of task
      example:
        status_message: status_message
        creation_time: creation_time
        execution_id: 6
        start_time: start_time
        update_time: update_time
        extra_attrs:
          key: {}
        end_time: end_time
        id: 0
        status: status
        run_count: 1
    ProviderUnderProject:
      type: object
      properties:
        id:
          type: integer
        provider:
          type: string
        enabled:
          type: boolean
        default:
          type: boolean
      example:
        default: true
        provider: provider
        id: 0
        enabled: true
    Icon:
      type: object
      properties:
        content-type:
          type: string
          description: The content type of the icon
        content:
          type: string
          description: The base64 encoded content of the icon
      example:
        content-type: content-type
        content: content
    ProjectReq:
      type: object
      properties:
        project_name:
          type: string
          description: The name of the project.
        public:
          type: boolean
          description: deprecated, reserved for project creation in replication
          nullable: true
        metadata:
          $ref: '#/components/schemas/ProjectMetadata'
        cve_allowlist:
          $ref: '#/components/schemas/CVEAllowlist'
        storage_limit:
          type: integer
          description: The storage quota of the project.
          format: int64
          nullable: true
        registry_id:
          type: integer
          description: The ID of referenced registry when creating the proxy cache
            project
          format: int64
          nullable: true
    Project:
      type: object
      properties:
        project_id:
          type: integer
          description: Project ID
          format: int32
        owner_id:
          type: integer
          description: The owner ID of the project always means the creator of the
            project.
          format: int32
        name:
          type: string
          description: The name of the project.
        registry_id:
          type: integer
          description: The ID of referenced registry when the project is a proxy cache
            project.
          format: int64
        creation_time:
          type: string
          description: The creation time of the project.
          format: date-time
        update_time:
          type: string
          description: The update time of the project.
          format: date-time
        deleted:
          type: boolean
          description: A deletion mark of the project.
        owner_name:
          type: string
          description: The owner name of the project.
        togglable:
          type: boolean
          description: Correspond to the UI about whether the project's publicity
            is  updatable (for UI)
        current_user_role_id:
          type: integer
          description: The role ID with highest permission of the current user who
            triggered the API (for UI).  This attribute is deprecated and will be
            removed in future versions.
        current_user_role_ids:
          type: array
          description: The list of role ID of the current user who triggered the API
            (for UI)
          items:
            type: integer
            format: int32
        repo_count:
          type: integer
          description: The number of the repositories under this project.
        chart_count:
          type: integer
          description: The total number of charts under this project.
        metadata:
          $ref: '#/components/schemas/ProjectMetadata'
        cve_allowlist:
          $ref: '#/components/schemas/CVEAllowlist'
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        togglable: true
        metadata:
          severity: severity
          prevent_vul: prevent_vul
          retention_id: retention_id
          reuse_sys_cve_allowlist: reuse_sys_cve_allowlist
          public: public
          auto_scan: auto_scan
          enable_content_trust: enable_content_trust
        owner_name: owner_name
        owner_id: 6
        repo_count: 2
        registry_id: 1
        update_time: 2000-01-23T04:56:07.000+00:00
        current_user_role_id: 5
        deleted: true
        project_id: 0
        name: name
        current_user_role_ids:
        - 5
        - 5
        cve_allowlist:
          creation_time: 2000-01-23T04:56:07.000+00:00
          update_time: 2000-01-23T04:56:07.000+00:00
          expires_at: 2
          project_id: 3
          id: 9
          items:
          - cve_id: cve_id
          - cve_id: cve_id
        chart_count: 7
    ProjectDeletable:
      type: object
      properties:
        deletable:
          type: boolean
          description: Whether the project can be deleted.
        message:
          type: string
          description: The detail message when the project can not be deleted.
      example:
        deletable: true
        message: message
    ProjectMetadata:
      type: object
      properties:
        public:
          type: string
          description: The public status of the project. The valid values are "true",
            "false".
        enable_content_trust:
          type: string
          description: Whether content trust is enabled or not. If it is enabled,
            user can't pull unsigned images from this project. The valid values are
            "true", "false".
          nullable: true
        prevent_vul:
          type: string
          description: Whether prevent the vulnerable images from running. The valid
            values are "true", "false".
          nullable: true
        severity:
          type: string
          description: If the vulnerability is high than severity defined here, the
            images can't be pulled. The valid values are "none", "low", "medium",
            "high", "critical".
          nullable: true
        auto_scan:
          type: string
          description: Whether scan images automatically when pushing. The valid values
            are "true", "false".
          nullable: true
        reuse_sys_cve_allowlist:
          type: string
          description: Whether this project reuse the system level CVE allowlist as
            the allowlist of its own.  The valid values are "true", "false". If it
            is set to "true" the actual allowlist associate with this project, if
            any, will be ignored.
          nullable: true
        retention_id:
          type: string
          description: The ID of the tag retention policy for the project
          nullable: true
      example:
        severity: severity
        prevent_vul: prevent_vul
        retention_id: retention_id
        reuse_sys_cve_allowlist: reuse_sys_cve_allowlist
        public: public
        auto_scan: auto_scan
        enable_content_trust: enable_content_trust
    ProjectSummary:
      type: object
      properties:
        repo_count:
          type: integer
          description: The number of the repositories under this project.
        chart_count:
          type: integer
          description: The total number of charts under this project.
        project_admin_count:
          type: integer
          description: The total number of project admin members.
        maintainer_count:
          type: integer
          description: The total number of maintainer members.
        developer_count:
          type: integer
          description: The total number of developer members.
        guest_count:
          type: integer
          description: The total number of guest members.
        limited_guest_count:
          type: integer
          description: The total number of limited guest members.
        quota:
          $ref: '#/components/schemas/ProjectSummary_quota'
        registry:
          $ref: '#/components/schemas/Registry'
      example:
        registry:
          creation_time: creation_time
          update_time: update_time
          credential:
            access_key: access_key
            access_secret: access_secret
            type: type
          name: name
          insecure: true
          description: description
          id: 3
          type: type
          url: url
          status: status
        quota:
          hard:
            key: 9
          used: null
        maintainer_count: 5
        guest_count: 2
        limited_guest_count: 7
        developer_count: 5
        repo_count: 0
        project_admin_count: 1
        chart_count: 6
    CVEAllowlist:
      type: object
      properties:
        id:
          type: integer
          description: ID of the allowlist
        project_id:
          type: integer
          description: ID of the project which the allowlist belongs to.  For system
            level allowlist this attribute is zero.
        expires_at:
          type: integer
          description: the time for expiration of the allowlist, in the form of seconds
            since epoch.  This is an optional attribute, if it's not set the CVE allowlist
            does not expire.
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CVEAllowlistItem'
        creation_time:
          type: string
          description: The creation time of the allowlist.
          format: date-time
        update_time:
          type: string
          description: The update time of the allowlist.
          format: date-time
      description: The CVE Allowlist for system or project
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        update_time: 2000-01-23T04:56:07.000+00:00
        expires_at: 2
        project_id: 3
        id: 9
        items:
        - cve_id: cve_id
        - cve_id: cve_id
    CVEAllowlistItem:
      type: object
      properties:
        cve_id:
          type: string
          description: The ID of the CVE, such as "CVE-2019-10164"
      description: The item in CVE allowlist
      example:
        cve_id: cve_id
    RegistryCredential:
      type: object
      properties:
        type:
          type: string
          description: Credential type, such as 'basic', 'oauth'.
        access_key:
          type: string
          description: Access key, e.g. user name when credential type is 'basic'.
        access_secret:
          type: string
          description: Access secret, e.g. password when credential type is 'basic'.
      example:
        access_key: access_key
        access_secret: access_secret
        type: type
    Registry:
      type: object
      properties:
        id:
          type: integer
          description: The registry ID.
          format: int64
        url:
          type: string
          description: The registry URL string.
        name:
          type: string
          description: The registry name.
        credential:
          $ref: '#/components/schemas/RegistryCredential'
        type:
          type: string
          description: Type of the registry, e.g. 'harbor'.
        insecure:
          type: boolean
          description: Whether or not the certificate will be verified when Harbor
            tries to access the server.
        description:
          type: string
          description: Description of the registry.
        status:
          type: string
          description: Health status of the registry.
        creation_time:
          type: string
          description: The create time of the policy.
        update_time:
          type: string
          description: The update time of the policy.
      example:
        creation_time: creation_time
        update_time: update_time
        credential:
          access_key: access_key
          access_secret: access_secret
          type: type
        name: name
        insecure: true
        description: description
        id: 3
        type: type
        url: url
        status: status
    ResourceList:
      type: object
      additionalProperties:
        type: integer
        format: int64
      x-schema-name: ResourceList
    ProjectSummary_quota:
      type: object
      properties:
        hard:
          $ref: '#/components/schemas/ResourceList'
        used:
          $ref: '#/components/schemas/ResourceList'
      example:
        hard:
          key: 9
        used: null
  responses:
    "200":
      description: Success
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          style: simple
          explode: false
          schema:
            type: string
      content: {}
    "201":
      description: Created
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          style: simple
          explode: false
          schema:
            type: string
        Location:
          description: The location of the resource
          style: simple
          explode: false
          schema:
            type: string
      content: {}
    "202":
      description: Accepted
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          style: simple
          explode: false
          schema:
            type: string
      content: {}
    "400":
      description: Bad request
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    "401":
      description: Unauthorized
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    "403":
      description: Forbidden
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    "404":
      description: Not found
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    "405":
      description: Method not allowed
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    "409":
      description: Conflict
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    "412":
      description: Precondition failed
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    "500":
      description: Internal server error
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
  parameters:
    query:
      name: q
      in: query
      description: Query string to query resources. Supported query patterns are "exact
        match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with union releationship(k={v1
        v2 v3})" and "list with intersetion relationship(k=(v1 v2 v3))". The value
        of range and list can be string(enclosed by " or '), integer or time(in format
        "2020-04-09 02:36:00"). All of these query patterns should be put in the query
        string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
      required: false
      style: form
      explode: true
      schema:
        type: string
    requestId:
      name: X-Request-Id
      in: header
      description: An unique ID for the request
      required: false
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    projectName:
      name: project_name
      in: path
      description: The name of the project
      required: true
      style: simple
      explode: false
      schema:
        type: string
    projectId:
      name: project_id
      in: path
      description: The ID of the project
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
    repositoryName:
      name: repository_name
      in: path
      description: The name of the repository. If it contains slash, encode it with
        URL encoding. e.g. a/b -> a%252Fb
      required: true
      style: simple
      explode: false
      schema:
        type: string
    reference:
      name: reference
      in: path
      description: The reference of the artifact, can be digest or tag
      required: true
      style: simple
      explode: false
      schema:
        type: string
    digest:
      name: digest
      in: path
      description: The digest of the resource
      required: true
      style: simple
      explode: false
      schema:
        type: string
    tagName:
      name: tag_name
      in: path
      description: The name of the tag
      required: true
      style: simple
      explode: false
      schema:
        type: string
    page:
      name: page
      in: query
      description: The page number
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int64
        default: 1
    pageSize:
      name: page_size
      in: query
      description: The size of per page
      required: false
      style: form
      explode: true
      schema:
        maximum: 100
        type: integer
        format: int64
        default: 10
    instanceName:
      name: preheat_instance_name
      in: path
      description: Instance Name
      required: true
      style: simple
      explode: false
      schema:
        type: string
    preheatPolicyName:
      name: preheat_policy_name
      in: path
      description: Preheat Policy Name
      required: true
      style: simple
      explode: false
      schema:
        type: string
    executionId:
      name: execution_id
      in: path
      description: Execution ID
      required: true
      style: simple
      explode: false
      schema:
        type: integer
    taskId:
      name: task_id
      in: path
      description: Task ID
      required: true
      style: simple
      explode: false
      schema:
        type: integer
  securitySchemes:
    basic:
      type: http
      scheme: basic
x-original-swagger-version: "2.0"
